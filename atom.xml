<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>似水流年</title>
  <subtitle>勤奋的搬运工</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.bugk.info/"/>
  <updated>2022-08-31T12:31:57.981Z</updated>
  <id>http://blog.bugk.info/</id>
  
  <author>
    <name>Xinyu LIU</name>
    <email>291462491@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2022 first</title>
    <link href="http://blog.bugk.info/2022/08/31/2022-first/"/>
    <id>http://blog.bugk.info/2022/08/31/2022-first/</id>
    <published>2022-08-31T12:31:57.000Z</published>
    <updated>2022-08-31T12:31:57.981Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>2022年第一篇</title>
    <link href="http://blog.bugk.info/2022/08/31/2022%E5%B9%B4%E7%AC%AC%E4%B8%80%E7%AF%87/"/>
    <id>http://blog.bugk.info/2022/08/31/2022年第一篇/</id>
    <published>2022-08-31T12:31:34.000Z</published>
    <updated>2022-08-31T12:31:34.236Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://blog.bugk.info/2022/08/16/file/Q4review/"/>
    <id>http://blog.bugk.info/2022/08/16/file/Q4review/</id>
    <published>2022-08-16T14:05:26.726Z</published>
    <updated>2016-12-20T05:29:25.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;燕勇&quot;&gt;&lt;a href=&quot;#燕勇&quot; class=&quot;headerlink&quot; title=&quot;燕勇&quot;&gt;&lt;/a&gt;燕勇&lt;/h3&gt;&lt;p&gt;优点：&lt;br&gt;比较热心，遇到问题都能马上帮忙支持，oresound的问题比较多&lt;br&gt;oresound迁移做一次分享吧。&lt;/p&gt;
&lt;p&gt;缺点：&lt;br&gt;缺乏思考，pom，有些现有的接口做修改的时候习惯copy一份重复的在改，后续代码维护成本较高。&lt;/p&gt;
&lt;h3 id=&quot;新宇&quot;&gt;&lt;a href=&quot;#新宇&quot; class=&quot;headerlink&quot; title=&quot;新宇&quot;&gt;&lt;/a&gt;新宇&lt;/h3&gt;&lt;p&gt;优点：&lt;/p&gt;
&lt;p&gt;缺点：比较固执&lt;/p&gt;
&lt;h3 id=&quot;崔亮&quot;&gt;&lt;a href=&quot;#崔亮&quot; class=&quot;headerlink&quot; title=&quot;崔亮&quot;&gt;&lt;/a&gt;崔亮&lt;/h3&gt;&lt;p&gt;优点：比较负责任，学习东西比较快，heimdall&lt;br&gt;业务理解也比较快，洲际这么大的需求短短几天就能了解的差不多，很佩服。&lt;/p&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;h3 id=&quot;小强&quot;&gt;&lt;a href=&quot;#小强&quot; class=&quot;headerlink&quot; title=&quot;小强&quot;&gt;&lt;/a&gt;小强&lt;/h3&gt;&lt;p&gt;优点：人比较活跃，思维比较敏锐，需求评审，技术讨论，能发现很多别人很多发现不了的问题。&lt;/p&gt;
&lt;p&gt;房态业务能完全hold住，在线poi 在线产品  满房率等等统计指标 做的很好，&lt;/p&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;h3 id=&quot;亚辉&quot;&gt;&lt;a href=&quot;#亚辉&quot; class=&quot;headerlink&quot; title=&quot;亚辉&quot;&gt;&lt;/a&gt;亚辉&lt;/h3&gt;&lt;p&gt;优点：总体感觉让人很放心，交给亚辉的需求都能比较高质量的完成，人比较有思想。&lt;br&gt;比较好的一点是追一些新鲜的技术，微信小程序，腾讯秒级微服务等等，大家可以学习一下。&lt;br&gt;感谢一下亚辉：上线backTrace 定位 消息重试的问题。&lt;/p&gt;
&lt;h3 id=&quot;王珏&quot;&gt;&lt;a href=&quot;#王珏&quot; class=&quot;headerlink&quot; title=&quot;王珏&quot;&gt;&lt;/a&gt;王珏&lt;/h3&gt;&lt;p&gt;优点：&lt;br&gt;没有直接对接过需求，通过各种会议发现，把关，经验比较丰富，能力也比较强，比较自信。&lt;br&gt;做需求时思考的比较多，敢于反问。不合理&lt;/p&gt;
&lt;p&gt;比较幽默&lt;/p&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;h3 id=&quot;肖浩&quot;&gt;&lt;a href=&quot;#肖浩&quot; class=&quot;headerlink&quot; title=&quot;肖浩&quot;&gt;&lt;/a&gt;肖浩&lt;/h3&gt;&lt;p&gt;优点：比较细心，爱学习，敢于挑战，转语言， 期待下&lt;br&gt;比较追求生活品质的人。&lt;/p&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;h3 id=&quot;胡鸿&quot;&gt;&lt;a href=&quot;#胡鸿&quot; class=&quot;headerlink&quot; title=&quot;胡鸿&quot;&gt;&lt;/a&gt;胡鸿&lt;/h3&gt;&lt;p&gt;优点：上进心比较强，进步较快，总结归纳能力比较强，开会会议记录，需求有总结文档&lt;br&gt;比较负责任，代码不写完不吃饭，自己负责的模块，线上问题响应比较快。&lt;br&gt;出case不要怕，吃一堑长一智，最起码可以看得出干的活很多，同一个坑不要掉两次。&lt;/p&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;h3 id=&quot;依娜&quot;&gt;&lt;a href=&quot;#依娜&quot; class=&quot;headerlink&quot; title=&quot;依娜&quot;&gt;&lt;/a&gt;依娜&lt;/h3&gt;&lt;p&gt;优点：很优秀，进步比较快，分担了很多业务需求，建议在外向一点。多发挥点自己的意见。&lt;/p&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;h3 id=&quot;荣杰&quot;&gt;&lt;a href=&quot;#荣杰&quot; class=&quot;headerlink&quot; title=&quot;荣杰&quot;&gt;&lt;/a&gt;荣杰&lt;/h3&gt;&lt;p&gt;优点：Q4进步比较大，干起活来虽然慢点，很努力上进,比较负责。给我的感触比较深，特别的主动，主动要很多任务。&lt;/p&gt;
&lt;p&gt;做需求质量的质量也提高了不少，价格优化没有干涉太多，在一开始价格系统一点都不了解，完成的也不错。&lt;/p&gt;
&lt;p&gt;继续保持住。提高点信心，说话要有底气。&lt;/p&gt;
&lt;p&gt;建议：在宏观一点 跳出来看看上下游 全局把控。&lt;br&gt;多交流，融入团队。&lt;/p&gt;
&lt;p&gt;缺点：&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;燕勇&quot;&gt;&lt;a href=&quot;#燕勇&quot; class=&quot;headerlink&quot; title=&quot;燕勇&quot;&gt;&lt;/a&gt;燕勇&lt;/h3&gt;&lt;p&gt;优点：&lt;br&gt;比较热心，遇到问题都能马上帮忙支持，oresound的问题比较多&lt;br&gt;oresound迁移做一次分享吧。&lt;/p&gt;
&lt;p&gt;缺点
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://blog.bugk.info/2022/08/16/file/20161222todo/"/>
    <id>http://blog.bugk.info/2022/08/16/file/20161222todo/</id>
    <published>2022-08-16T14:05:26.726Z</published>
    <updated>2016-12-27T03:21:40.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;TODO-List&quot;&gt;&lt;a href=&quot;#TODO-List&quot; class=&quot;headerlink&quot; title=&quot;TODO List&quot;&gt;&lt;/a&gt;TODO List&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;房态和产品缓存消息通知迁移到databus   杨贵亮&lt;/li&gt;
&lt;li&gt;BOS价格同步需求    蔡海权&lt;/li&gt;
&lt;li&gt;飞马竞价比对需求   韦健鹏&lt;/li&gt;
&lt;li&gt;产品打包需求  张思雨&lt;/li&gt;
&lt;li&gt;EB poi sourceMark属性需求 熊明辉&lt;/li&gt;
&lt;li&gt;Goods可用性优化（搜索推荐） 杨贵亮&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;周会问题&quot;&gt;&lt;a href=&quot;#周会问题&quot; class=&quot;headerlink&quot; title=&quot;周会问题&quot;&gt;&lt;/a&gt;周会问题&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;goods主库较高&lt;/li&gt;
&lt;li&gt;可用性问题推动&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;TODO-List&quot;&gt;&lt;a href=&quot;#TODO-List&quot; class=&quot;headerlink&quot; title=&quot;TODO List&quot;&gt;&lt;/a&gt;TODO List&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;房态和产品缓存消息通知迁移到databus   杨贵亮&lt;/li&gt;
&lt;li
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://blog.bugk.info/2022/08/16/Java%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://blog.bugk.info/2022/08/16/Java阻塞队列学习笔记/</id>
    <published>2022-08-16T14:05:26.725Z</published>
    <updated>2016-12-20T05:29:28.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Java-阻塞队列学习笔记&quot;&gt;&lt;a href=&quot;#Java-阻塞队列学习笔记&quot; class=&quot;headerlink&quot; title=&quot;Java 阻塞队列学习笔记&quot;&gt;&lt;/a&gt;Java 阻塞队列学习笔记&lt;/h3&gt;&lt;p&gt;ReentrantLock&lt;/p&gt;
&lt;p&gt;Condition&lt;/p&gt;
&lt;p&gt;LinkedBlockingDeque&lt;/p&gt;
&lt;p&gt;SynchronousQueue&lt;/p&gt;
&lt;p&gt;DelayQueue&lt;/p&gt;
&lt;p&gt;LockSupport.park()&lt;/p&gt;
&lt;p&gt;AQS&lt;/p&gt;
&lt;h3 id=&quot;参考文档&quot;&gt;&lt;a href=&quot;#参考文档&quot; class=&quot;headerlink&quot; title=&quot;参考文档&quot;&gt;&lt;/a&gt;参考文档&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.infoq.com/cn/articles/java-blocking-queue/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Blocking Queue From InfoQ&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/23863915&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Disruptor From Meituan&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Java-阻塞队列学习笔记&quot;&gt;&lt;a href=&quot;#Java-阻塞队列学习笔记&quot; class=&quot;headerlink&quot; title=&quot;Java 阻塞队列学习笔记&quot;&gt;&lt;/a&gt;Java 阻塞队列学习笔记&lt;/h3&gt;&lt;p&gt;ReentrantLock&lt;/p&gt;
&lt;p&gt;Condi
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>《大话数据结构》读书笔记</title>
    <link href="http://blog.bugk.info/2016/09/01/%E3%80%8A%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E3%80%8B/"/>
    <id>http://blog.bugk.info/2016/09/01/《大话数据结构》/</id>
    <published>2016-09-01T07:28:46.000Z</published>
    <updated>2016-09-11T10:35:22.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;第一章-数据结构绪论&quot;&gt;&lt;a href=&quot;#第一章-数据结构绪论&quot; class=&quot;headerlink&quot; title=&quot;第一章 数据结构绪论&quot;&gt;&lt;/a&gt;第一章 数据结构绪论&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;数据结构定义：数据结构是相互之间存在一种或多种的关系的数据元素组合。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;结构分类&quot;&gt;&lt;a href=&quot;#结构分类&quot; class=&quot;headerlink&quot; title=&quot;结构分类&quot;&gt;&lt;/a&gt;结构分类&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;逻辑结构&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;集合结构&lt;/li&gt;
&lt;li&gt;线性结构&lt;/li&gt;
&lt;li&gt;树形结构&lt;/li&gt;
&lt;li&gt;图形结构&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;物理结构&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;顺序存储结构&lt;/li&gt;
&lt;li&gt;链接存储结构&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;第二章-算法&quot;&gt;&lt;a href=&quot;#第二章-算法&quot; class=&quot;headerlink&quot; title=&quot;第二章 算法&quot;&gt;&lt;/a&gt;第二章 算法&lt;/h2&gt;&lt;h4 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h4&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;算法的定义：算法是解决特定问题求解步骤的描述，在计算机中为指令的优先序列，并且每条质量表示一个或者多个操作。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;特性&quot;&gt;&lt;a href=&quot;#特性&quot; class=&quot;headerlink&quot; title=&quot;特性&quot;&gt;&lt;/a&gt;特性&lt;/h4&gt;&lt;p&gt;有穷性、确定性、可行性、输入、输出&lt;/p&gt;
&lt;h4 id=&quot;算法的设计要求&quot;&gt;&lt;a href=&quot;#算法的设计要求&quot; class=&quot;headerlink&quot; title=&quot;算法的设计要求&quot;&gt;&lt;/a&gt;算法的设计要求&lt;/h4&gt;&lt;p&gt;正确性、可读性、健壮性、高效率、低存储量需求&lt;/p&gt;
&lt;h4 id=&quot;度量方法&quot;&gt;&lt;a href=&quot;#度量方法&quot; class=&quot;headerlink&quot; title=&quot;度量方法&quot;&gt;&lt;/a&gt;度量方法&lt;/h4&gt;&lt;p&gt;事后统计方法（不科学、不准确）、事前分析估算方法。&lt;/p&gt;
&lt;h4 id=&quot;时间复杂度&quot;&gt;&lt;a href=&quot;#时间复杂度&quot; class=&quot;headerlink&quot; title=&quot;时间复杂度&quot;&gt;&lt;/a&gt;时间复杂度&lt;/h4&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;在进行算法分析时，语句总执行次数&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(n)&lt;/span&gt;&lt;/span&gt;是关于问题规模n的函数，进而分析&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(n)&lt;/span&gt;&lt;/span&gt;随n的变化情况并确定&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(n)&lt;/span&gt;&lt;/span&gt;的数量级。算法的时间复杂度，也就是算法的时间量度，记作：&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(n)&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;O&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(f(n)&lt;/span&gt;&lt;/span&gt;),它表示随问题规模n的增大算法的执行时间的增长率和&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(n)&lt;/span&gt;&lt;/span&gt;的增长率相同，称作算法的渐进时间复杂度，简称为时间复杂度。其中&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(n)&lt;/span&gt;&lt;/span&gt;是问题规模n的某个函数。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;推导大O阶方法&quot;&gt;&lt;a href=&quot;#推导大O阶方法&quot; class=&quot;headerlink&quot; title=&quot;推导大O阶方法&quot;&gt;&lt;/a&gt;推导大O阶方法&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;用常数1取代运行时间中的所有加法常数。&lt;/li&gt;
&lt;li&gt;在修改后的运行次数函数中只保留最高阶项。&lt;/li&gt;
&lt;li&gt;如果最高阶存在且不是1，则去除与这个项相乘的常数，最终得到的结果就是大O阶。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对于分支结果而言，无论真假，执行的次数是恒定的，不会随n的变化而发生变化，所以单纯的分支结构（不在循环体内的），其时间复杂度是O(1).&lt;/p&gt;
&lt;h4 id=&quot;常见的时间复杂度&quot;&gt;&lt;a href=&quot;#常见的时间复杂度&quot; class=&quot;headerlink&quot; title=&quot;常见的时间复杂度&quot;&gt;&lt;/a&gt;常见的时间复杂度&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;函数&lt;/th&gt;
&lt;th&gt;阶&lt;/th&gt;
&lt;th&gt;简称  &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;常数阶&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2n+3&lt;/td&gt;
&lt;td&gt;O(n)&lt;/td&gt;
&lt;td&gt;线性阶&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3n^2 + 2n +1&lt;/td&gt;
&lt;td&gt;O(n^2)&lt;/td&gt;
&lt;td&gt;平方阶&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5log2n&lt;/td&gt;
&lt;td&gt;O(logn)&lt;/td&gt;
&lt;td&gt;对数阶&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2n+3nlog2n +19&lt;/td&gt;
&lt;td&gt;O(nlogn)&lt;/td&gt;
&lt;td&gt;nlogn阶&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6n^3 + 2n^2 + 3n +4&lt;/td&gt;
&lt;td&gt;O(n^3)&lt;/td&gt;
&lt;td&gt;立方阶&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2^n&lt;/td&gt;
&lt;td&gt;O(2^n)&lt;/td&gt;
&lt;td&gt;指数阶&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;常用时间复杂度耗费时间从小到大排序：&lt;br&gt;&lt;strong&gt; O(1)&amp;lt;O(logn)&amp;lt;O(n)&amp;lt;O(nlogn)&amp;lt;O(n^2)&amp;lt;O(n^3)&amp;lt;O(2^n)&amp;lt;O(n!)&amp;lt;O(n^n) &lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第一章-数据结构绪论&quot;&gt;&lt;a href=&quot;#第一章-数据结构绪论&quot; class=&quot;headerlink&quot; title=&quot;第一章 数据结构绪论&quot;&gt;&lt;/a&gt;第一章 数据结构绪论&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;数据结构定义：数据结构是相互之间存在一种或多种的关系的数据元素组合。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="http://blog.bugk.info/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Groovy" scheme="http://blog.bugk.info/tags/Groovy/"/>
    
      <category term="Java" scheme="http://blog.bugk.info/tags/Java/"/>
    
      <category term="数据结构" scheme="http://blog.bugk.info/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="http://blog.bugk.info/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="读书笔记" scheme="http://blog.bugk.info/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>(逐字稿)如何快速成为一个优秀的RD</title>
    <link href="http://blog.bugk.info/2016/08/16/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E6%88%90%E4%B8%BA%E4%B8%80%E4%B8%AA%E4%BC%98%E7%A7%80%E7%9A%84RD/"/>
    <id>http://blog.bugk.info/2016/08/16/如何快速成为一个优秀的RD/</id>
    <published>2016-08-16T07:28:46.000Z</published>
    <updated>2016-08-17T05:42:11.000Z</updated>
    
    <content type="html">&lt;p&gt;最近要给新入职的RD同学们分享一下如何快速成长，大致整理了一下思路，在这里记录一下以作备忘。    &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; 如何快速成长成一名优秀的RD。    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;大家好，我是刘新宇，目前也就入职1年多，就以我个人经验给大家回答一下这个问题，如何快速成长虽然没有捷径可走，但是也有很多技巧的，在这里就给大家分享4点比较实用的。&lt;/p&gt;
&lt;h4 id=&quot;第一点：工作中做事一定要有目标、有计划、有总结&quot;&gt;&lt;a href=&quot;#第一点：工作中做事一定要有目标、有计划、有总结&quot; class=&quot;headerlink&quot; title=&quot;第一点：工作中做事一定要有目标、有计划、有总结&quot;&gt;&lt;/a&gt;第一点：工作中做事一定要有目标、有计划、有总结&lt;/h4&gt;&lt;p&gt;不管是学习一项技能还是做一个业务需求，一定要在初期开始做的时候就要有一个明确的目标，并有可执行的计划，初期的话可以跟自己导师请教，同时在最后做完之后也要有总结，总结最好是落实到书面上的，类似日报、周报这种形式。&lt;/p&gt;
&lt;h4 id=&quot;第二点：要保持积极学习的态度&quot;&gt;&lt;a href=&quot;#第二点：要保持积极学习的态度&quot; class=&quot;headerlink&quot; title=&quot;第二点：要保持积极学习的态度&quot;&gt;&lt;/a&gt;第二点：要保持积极学习的态度&lt;/h4&gt;&lt;p&gt;大家都知道，我们互联网行业的技术革新日新月异，如果不积极学习很快就会掉队。学习方法的话就不多讲了，在这里给大家推荐两个学习途径：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;读书平台。美团图书馆，6600多本同事共享的书,技术上的，非技术上的，利用上下班的班车上，地铁上的空闲时间读书，能学到不少东西。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;分享平台。在新美大我们有一个分享平台，不知道大家知不知道，上面有很多优质的资源，可以面对面沟通，多听前辈们的分享，能让你在工作中少走很多弯路。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;第三点：业务与技术一定要相辅相成&quot;&gt;&lt;a href=&quot;#第三点：业务与技术一定要相辅相成&quot; class=&quot;headerlink&quot; title=&quot;第三点：业务与技术一定要相辅相成&quot;&gt;&lt;/a&gt;第三点：业务与技术一定要相辅相成&lt;/h4&gt;&lt;p&gt;二者不能丢掉任一方，任何技术都是为业务服务，业务也是用来实践技术的，做业务并不是一味的重复劳动，做的时候一定要有自己的思考，把自己会的技术尽可能的应用进去，千万不要PM让做什么就做什么，把平凡的事情做出不平凡来。&lt;/p&gt;
&lt;h4 id=&quot;第四点：有问题的地方就有机会&quot;&gt;&lt;a href=&quot;#第四点：有问题的地方就有机会&quot; class=&quot;headerlink&quot; title=&quot;第四点：有问题的地方就有机会&quot;&gt;&lt;/a&gt;第四点：有问题的地方就有机会&lt;/h4&gt;&lt;p&gt;作为新人不要胆怯，觉得工作中有哪些不合理的地方要立刻指出来，只要说得对，大家都会听你的。一定要把握机会让大家认可你。&lt;/p&gt;
&lt;p&gt;归根结底，如果说相比别人优秀那肯定就要比别人多一些付出，祝大家早日成为独当一面的大牛。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近要给新入职的RD同学们分享一下如何快速成长，大致整理了一下思路，在这里记录一下以作备忘。    &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; 如何快速成长成一名优秀的RD。    &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="逐字稿" scheme="http://blog.bugk.info/categories/%E9%80%90%E5%AD%97%E7%A8%BF/"/>
    
    
      <category term="学习" scheme="http://blog.bugk.info/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="逐字稿" scheme="http://blog.bugk.info/tags/%E9%80%90%E5%AD%97%E7%A8%BF/"/>
    
  </entry>
  
  <entry>
    <title>区间合并工具Section</title>
    <link href="http://blog.bugk.info/2016/07/16/section/"/>
    <id>http://blog.bugk.info/2016/07/16/section/</id>
    <published>2016-07-16T04:28:46.000Z</published>
    <updated>2016-08-17T05:46:39.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Section&quot;&gt;&lt;a href=&quot;#Section&quot; class=&quot;headerlink&quot; title=&quot;Section&quot;&gt;&lt;/a&gt;Section&lt;/h2&gt;&lt;p&gt;section是一个区间merge工具类，工具类采用泛型+Comparator+递归来实现通用性处理，并预留data merge SPI提供具体的数据merge策略。&lt;/p&gt;
&lt;h2 id=&quot;Usage&quot;&gt;&lt;a href=&quot;#Usage&quot; class=&quot;headerlink&quot; title=&quot;Usage&quot;&gt;&lt;/a&gt;Usage&lt;/h2&gt;&lt;h3 id=&quot;Create-section&quot;&gt;&lt;a href=&quot;#Create-section&quot; class=&quot;headerlink&quot; title=&quot;Create section&quot;&gt;&lt;/a&gt;Create section&lt;/h3&gt;&lt;p&gt;使用Section提供的工厂方法&lt;code&gt;build&lt;/code&gt;来创建对象&lt;/p&gt;
&lt;figure class=&quot;highlight fortran&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Section&amp;lt;T&amp;gt; build(&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; startDate, &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; endDate, T &lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;, Comparator comparator, DataProcessor&amp;lt;T&amp;gt; dataProcessor)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;Merge-method&quot;&gt;&lt;a href=&quot;#Merge-method&quot; class=&quot;headerlink&quot; title=&quot;Merge method&quot;&gt;&lt;/a&gt;Merge method&lt;/h3&gt;&lt;h4 id=&quot;merge-one-to-one&quot;&gt;&lt;a href=&quot;#merge-one-to-one&quot; class=&quot;headerlink&quot; title=&quot;merge one to one&quot;&gt;&lt;/a&gt;merge one to one&lt;/h4&gt;&lt;figure class=&quot;highlight nsis&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;List&amp;lt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Section&lt;/span&gt;&amp;lt;T&amp;gt;&amp;gt; merge(&lt;span class=&quot;keyword&quot;&gt;Section&lt;/span&gt;&amp;lt;T&amp;gt; source, &lt;span class=&quot;keyword&quot;&gt;Section&lt;/span&gt;&amp;lt;T&amp;gt; target)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;merge-one-to-List&quot;&gt;&lt;a href=&quot;#merge-one-to-List&quot; class=&quot;headerlink&quot; title=&quot;merge one to List&quot;&gt;&lt;/a&gt;merge one to List&lt;/h4&gt;&lt;figure class=&quot;highlight nsis&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;List&amp;lt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Section&lt;/span&gt;&amp;lt;T&amp;gt;&amp;gt; merge(&lt;span class=&quot;keyword&quot;&gt;Section&lt;/span&gt;&amp;lt;T&amp;gt; source, List&amp;lt;&lt;span class=&quot;keyword&quot;&gt;Section&lt;/span&gt;&amp;lt;T&amp;gt;&amp;gt; target, boolean mergeSelf)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;merge-List-to-one&quot;&gt;&lt;a href=&quot;#merge-List-to-one&quot; class=&quot;headerlink&quot; title=&quot;merge List to one&quot;&gt;&lt;/a&gt;merge List to one&lt;/h4&gt;&lt;figure class=&quot;highlight nsis&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;List&amp;lt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Section&lt;/span&gt;&amp;lt;T&amp;gt;&amp;gt; merge(List&amp;lt;&lt;span class=&quot;keyword&quot;&gt;Section&lt;/span&gt;&amp;lt;T&amp;gt;&amp;gt; source, &lt;span class=&quot;keyword&quot;&gt;Section&lt;/span&gt;&amp;lt;T&amp;gt; target, boolean mergeSelf)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;merge-List-to-List&quot;&gt;&lt;a href=&quot;#merge-List-to-List&quot; class=&quot;headerlink&quot; title=&quot;merge List to List&quot;&gt;&lt;/a&gt;merge List to List&lt;/h4&gt;&lt;figure class=&quot;highlight nsis&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;List&amp;lt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Section&lt;/span&gt;&amp;lt;T&amp;gt;&amp;gt; merge(List&amp;lt;&lt;span class=&quot;keyword&quot;&gt;Section&lt;/span&gt;&amp;lt;T&amp;gt;&amp;gt; source, List&amp;lt;&lt;span class=&quot;keyword&quot;&gt;Section&lt;/span&gt;&amp;lt;T&amp;gt;&amp;gt; target)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Comparator&quot;&gt;&lt;a href=&quot;#Comparator&quot; class=&quot;headerlink&quot; title=&quot;Comparator&quot;&gt;&lt;/a&gt;Comparator&lt;/h3&gt;&lt;p&gt;merge对象比较使用，用于判断两个数据是否可以合并，例如：&lt;/p&gt;
&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; class &lt;span class=&quot;type&quot;&gt;SectionComparator&lt;/span&gt; implements &lt;span class=&quot;type&quot;&gt;Comparator&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;SectionModel&lt;/span&gt;&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        @&lt;span class=&quot;type&quot;&gt;Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        public &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; compare(&lt;span class=&quot;type&quot;&gt;SectionModel&lt;/span&gt; o1, &lt;span class=&quot;type&quot;&gt;SectionModel&lt;/span&gt; o2) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;ComparisonChain&lt;/span&gt;.start()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    .compare(o1.day, o2.day)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    .compare(o1.desc, o2.desc)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    .&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;```    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;### Merge SPI&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#### SPI&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;interface DataProcessor&lt;t&gt; {&lt;br&gt;        T dataMerge(T source, T target);&lt;br&gt;    }&lt;br&gt;&lt;figure class=&quot;highlight vala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#### Default Handler&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/t&gt;&lt;/p&gt;
&lt;p&gt;public static class DefaultDataProcessor&lt;t&gt; implements DataProcessor&lt;t&gt; {&lt;/t&gt;&lt;/t&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    @Override
    public T dataMerge(T source, T target) {
        return target;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight http&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;vala&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;## Simple Example&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;### unit test&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;@Test&lt;br&gt;public void buildTest() {&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    SectionModel sectionModel = new SectionModel();

    sectionModel.setStartDate(20150101);
    sectionModel.setEndDate(20160101);
    sectionModel.setDay(10);
    sectionModel.setDesc(&amp;quot;123&amp;quot;);
    Section&amp;lt;SectionModel&amp;gt; section = Section.build(sectionModel);

    SectionModel sectionModel2 = new SectionModel();

    sectionModel2.setStartDate(20151001);
    sectionModel2.setEndDate(20160601);
    sectionModel2.setDay(10);
    sectionModel2.setDesc(&amp;quot;1234&amp;quot;);
    Section&amp;lt;SectionModel&amp;gt; section2 = Section.build(sectionModel2);

    List&amp;lt;Section&amp;lt;SectionModel&amp;gt;&amp;gt; sectionList =  Section.merge(section,section2);

    System.out.println(sectionList);

}
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;### &lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;merge&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;result&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;[Section{startDate=20150101, endDate=20150930, data=SectionModel{startDate=20150101, endDate=20160101, day=10, desc=123}}, Section{startDate=20151001, endDate=20160601, data=SectionModel{startDate=20151001, endDate=20160601, day=10, desc=1234}}]&lt;/p&gt;
&lt;p&gt;```&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Section&quot;&gt;&lt;a href=&quot;#Section&quot; class=&quot;headerlink&quot; title=&quot;Section&quot;&gt;&lt;/a&gt;Section&lt;/h2&gt;&lt;p&gt;section是一个区间merge工具类，工具类采用泛型+Comparator+递归来实现通用性处理，并预留data merge SPI提供具体的数据merge策略。&lt;/p&gt;
&lt;h2 id=&quot;Usage&quot;&gt;&lt;a href=&quot;#Usage&quot; class=&quot;headerlink&quot; title=&quot;Usage&quot;&gt;&lt;/a&gt;Usage&lt;/h2&gt;&lt;h3 id=&quot;Create-section&quot;&gt;&lt;a href=&quot;#Create-section&quot; class=&quot;headerlink&quot; title=&quot;Create section&quot;&gt;&lt;/a&gt;Create section&lt;/h3&gt;&lt;p&gt;使用Section提供的工厂方法&lt;code&gt;build&lt;/code&gt;来创建对象&lt;/p&gt;
&lt;figure class=&quot;highlight fortran&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Section&amp;lt;T&amp;gt; build(&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; startDate, &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; endDate, T &lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;, Comparator comparator, DataProcessor&amp;lt;T&amp;gt; dataProcessor)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Java" scheme="http://blog.bugk.info/categories/Java/"/>
    
    
      <category term="Java" scheme="http://blog.bugk.info/tags/Java/"/>
    
      <category term="学习" scheme="http://blog.bugk.info/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Guava从入坑到出坑</title>
    <link href="http://blog.bugk.info/2016/07/16/Guava%E4%BB%8E%E5%85%A5%E5%9D%91%E5%88%B0%E5%87%BA%E5%9D%91/"/>
    <id>http://blog.bugk.info/2016/07/16/Guava从入坑到出坑/</id>
    <published>2016-07-16T04:28:46.000Z</published>
    <updated>2016-09-02T06:06:28.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Guava简介&quot;&gt;&lt;a href=&quot;#Guava简介&quot; class=&quot;headerlink&quot; title=&quot;Guava简介&quot;&gt;&lt;/a&gt;Guava简介&lt;/h2&gt;&lt;p&gt;Guava是google公司开源的Java工具包，主要包含集合 [collections] 、缓存 [caching] 、原生类型扩展[primitives support] 、并发库 [concurrency libraries] 、字符串处理 [string processing] 、I/O 等。 &lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;讲在前面&quot;&gt;&lt;a href=&quot;#讲在前面&quot; class=&quot;headerlink&quot; title=&quot;讲在前面&quot;&gt;&lt;/a&gt;讲在前面&lt;/h2&gt;&lt;p&gt;在正式开始之前，我们先来了解两个比较重要的接口Function和Predicates.&lt;/p&gt;
&lt;h3 id=&quot;Fuction&quot;&gt;&lt;a href=&quot;#Fuction&quot; class=&quot;headerlink&quot; title=&quot;Fuction&quot;&gt;&lt;/a&gt;Fuction&lt;/h3&gt;&lt;p&gt;Function可以说是Guava中函数式编程的核心，其代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight less&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;@GwtCompatible&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public interface Function&amp;lt;F, T&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;variable&quot;&gt;@Nullable&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  T &lt;span class=&quot;function&quot;&gt;apply&lt;/span&gt;(&lt;span class=&quot;variable&quot;&gt;@Nullable&lt;/span&gt; F input);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;variable&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  boolean &lt;span class=&quot;function&quot;&gt;equals&lt;/span&gt;(&lt;span class=&quot;variable&quot;&gt;@Nullable&lt;/span&gt; Object object);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到这个接口是一个泛型接口，分别给出了F和T两个泛型约束，F可以理解成为From也就是函数式的输入，T可以理解为To也就是函数式的输入，其核心方法&lt;code&gt;apply&lt;/code&gt;就是表示从From到To的一个转换。&lt;br&gt;关于函数式编程可以看下这两篇blog。&lt;a href=&quot;http://www.ruanyifeng.com/blog/2012/04/functional_programming.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;函数式编程初探&lt;/a&gt; &lt;a href=&quot;http://coolshell.cn/articles/10822.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;函数式编程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;函数式编程的优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;逃逸分析&lt;/li&gt;
&lt;li&gt;不会修改外部数据&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Fuctions&quot;&gt;&lt;a href=&quot;#Fuctions&quot; class=&quot;headerlink&quot; title=&quot;Fuctions&quot;&gt;&lt;/a&gt;Fuctions&lt;/h4&gt;&lt;h3 id=&quot;Predicate&quot;&gt;&lt;a href=&quot;#Predicate&quot; class=&quot;headerlink&quot; title=&quot;Predicate&quot;&gt;&lt;/a&gt;Predicate&lt;/h3&gt;&lt;h4 id=&quot;Predicates&quot;&gt;&lt;a href=&quot;#Predicates&quot; class=&quot;headerlink&quot; title=&quot;Predicates&quot;&gt;&lt;/a&gt;Predicates&lt;/h4&gt;&lt;h3 id=&quot;Supplier&quot;&gt;&lt;a href=&quot;#Supplier&quot; class=&quot;headerlink&quot; title=&quot;Supplier&quot;&gt;&lt;/a&gt;Supplier&lt;/h3&gt;&lt;h4 id=&quot;Suppliers&quot;&gt;&lt;a href=&quot;#Suppliers&quot; class=&quot;headerlink&quot; title=&quot;Suppliers&quot;&gt;&lt;/a&gt;Suppliers&lt;/h4&gt;&lt;h2 id=&quot;集合&quot;&gt;&lt;a href=&quot;#集合&quot; class=&quot;headerlink&quot; title=&quot;集合&quot;&gt;&lt;/a&gt;集合&lt;/h2&gt;&lt;h2 id=&quot;基本类型&quot;&gt;&lt;a href=&quot;#基本类型&quot; class=&quot;headerlink&quot; title=&quot;基本类型&quot;&gt;&lt;/a&gt;基本类型&lt;/h2&gt;&lt;h2 id=&quot;缓存&quot;&gt;&lt;a href=&quot;#缓存&quot; class=&quot;headerlink&quot; title=&quot;缓存&quot;&gt;&lt;/a&gt;缓存&lt;/h2&gt;&lt;h2 id=&quot;IO&quot;&gt;&lt;a href=&quot;#IO&quot; class=&quot;headerlink&quot; title=&quot;IO&quot;&gt;&lt;/a&gt;IO&lt;/h2&gt;&lt;h2 id=&quot;并发&quot;&gt;&lt;a href=&quot;#并发&quot; class=&quot;headerlink&quot; title=&quot;并发&quot;&gt;&lt;/a&gt;并发&lt;/h2&gt;&lt;h2 id=&quot;其他&quot;&gt;&lt;a href=&quot;#其他&quot; class=&quot;headerlink&quot; title=&quot;其他&quot;&gt;&lt;/a&gt;其他&lt;/h2&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Guava简介&quot;&gt;&lt;a href=&quot;#Guava简介&quot; class=&quot;headerlink&quot; title=&quot;Guava简介&quot;&gt;&lt;/a&gt;Guava简介&lt;/h2&gt;&lt;p&gt;Guava是google公司开源的Java工具包，主要包含集合 [collections] 、缓存 [caching] 、原生类型扩展[primitives support] 、并发库 [concurrency libraries] 、字符串处理 [string processing] 、I/O 等。 &lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://blog.bugk.info/categories/Java/"/>
    
    
      <category term="Java" scheme="http://blog.bugk.info/tags/Java/"/>
    
      <category term="学习" scheme="http://blog.bugk.info/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Groovy性能优化三部曲</title>
    <link href="http://blog.bugk.info/2016/04/07/Groovy%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B8%89%E9%83%A8%E6%9B%B2/"/>
    <id>http://blog.bugk.info/2016/04/07/Groovy性能优化三部曲/</id>
    <published>2016-04-07T07:28:46.000Z</published>
    <updated>2016-04-14T12:03:11.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;给Java加点料&quot;&gt;&lt;a href=&quot;#给Java加点料&quot; class=&quot;headerlink&quot; title=&quot;给Java加点料&quot;&gt;&lt;/a&gt;给Java加点料&lt;/h3&gt;&lt;p&gt;最近在研究服务的动态校验规则，在厌倦了使用&lt;code&gt;Java&lt;/code&gt;的静态语言进行校验时，开始尝试使用可以运行在JVM的脚本语言（&lt;code&gt;Groovy&lt;/code&gt;,&lt;code&gt;Scala&lt;/code&gt;,&lt;code&gt;Clojure&lt;/code&gt;,&lt;code&gt;JRuby&lt;/code&gt;,&lt;code&gt;JPython&lt;/code&gt;）进行规则的&lt;code&gt;DSL&lt;/code&gt;开发,在运行期通过改变&lt;code&gt;DSL&lt;/code&gt;来动态的改变规则来达到动态校验的目的，通过一段时间的调研最终选型使用&lt;code&gt;Groovy&lt;/code&gt;进行开发。&lt;br&gt;选用&lt;code&gt;Groovy&lt;/code&gt;的原因主要有：    &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;学习成本较低&lt;/li&gt;
&lt;li&gt;元编程能力较强&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Gradle&lt;/code&gt;的流行&lt;/li&gt;
&lt;li&gt;函数式编程&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关于运行在JVM的脚步语言可以参考一下这几篇文章：&lt;a href=&quot;http://coolshell.cn/articles/2631.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;五大基于JVM的脚本语言&lt;/a&gt;、&lt;a href=&quot;http://www.ibm.com/developerworks/cn/java/j-jn16/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Java下一代&lt;/a&gt;、&lt;a href=&quot;http://www.oschina.net/question/213217_45561&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;9个杀手级JVM编程语言&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;Groovy&lt;/code&gt;的&lt;code&gt;DSL&lt;/code&gt;语法和校验API都准备就绪后就开始了在&lt;code&gt;Java&lt;/code&gt;应用中集成，整个集成到最后优化完差不多耗时2个星期，过程相当的波折，下面就记录一下在集成&lt;code&gt;Groovy&lt;/code&gt;中遇到问题到处理问题的三部曲。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;三重境界&quot;&gt;&lt;a href=&quot;#三重境界&quot; class=&quot;headerlink&quot; title=&quot;三重境界&quot;&gt;&lt;/a&gt;三重境界&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;古今之成大事业、大学问者，必经过三种之境界：”昨夜西风凋碧树。独上高楼，望尽天涯路。”此第一境也。”衣带渐宽终不悔，为伊消得人憔悴。”此第二境也。”众里寻他千百度，蓦然回首，那人却在灯火阑珊处。”此第三境也。此等语皆非大词人不能道。然遽以此意解释诸词，恐为晏欧诸公所不许也。” —— 王国维《人间词话》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;一部&quot;&gt;&lt;a href=&quot;#一部&quot; class=&quot;headerlink&quot; title=&quot;一部&quot;&gt;&lt;/a&gt;一部&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;“昨夜西风凋碧树。独上高楼，望尽天涯路。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;集成的第一步就是在Java代码中嵌入Groovy代码，在经过各种资料查阅之后分析到几种可以在Java代码中使用Groovy。&lt;/p&gt;
&lt;h4 id=&quot;代码集成方式&quot;&gt;&lt;a href=&quot;#代码集成方式&quot; class=&quot;headerlink&quot; title=&quot;代码集成方式&quot;&gt;&lt;/a&gt;代码集成方式&lt;/h4&gt;&lt;h5 id=&quot;1-使用groovy-util-Eval&quot;&gt;&lt;a href=&quot;#1-使用groovy-util-Eval&quot; class=&quot;headerlink&quot; title=&quot;1.使用groovy.util.Eval&quot;&gt;&lt;/a&gt;1.使用&lt;code&gt;groovy.util.Eval&lt;/code&gt;&lt;/h5&gt;&lt;p&gt;&lt;code&gt;groovy.util.Eval&lt;/code&gt;的使用比较简单，直接调用Eval的me方法即可，&lt;code&gt;groovy.util.Eval&lt;/code&gt;是Groovy的Jar包中的工具类，依赖了Groovy的jar包就可以。&lt;/p&gt;
&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;EvalTest&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;String[] args&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;.println(Eval.me(&lt;span class=&quot;string&quot;&gt;&quot;33*3&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;.println(Eval.me(&lt;span class=&quot;string&quot;&gt;&quot;&#39;foo&#39;.toUpperCase()&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;2-使用GroovyShell&quot;&gt;&lt;a href=&quot;#2-使用GroovyShell&quot; class=&quot;headerlink&quot; title=&quot;2.使用GroovyShell&quot;&gt;&lt;/a&gt;2.使用&lt;code&gt;GroovyShell&lt;/code&gt;&lt;/h5&gt;&lt;p&gt;groovy.lang.GroovyShell 类是建议采用的脚本计算方式，因为它具有缓存结果脚本实例的能力。虽然 Eval 类能够返回编译脚本的执行结果，但 GroovyShell 类却能提供更多选项。&lt;/p&gt;
&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;GroovyShellTest&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;String[] args&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        GroovyShell shell = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; GroovyShell();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;.println(shell.evaluate(&lt;span class=&quot;string&quot;&gt;&quot;3*5&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Script script = shell.parse(&lt;span class=&quot;string&quot;&gt;&quot;3*5&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;.println(script.run());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;3-使用GroovyClassLoader&quot;&gt;&lt;a href=&quot;#3-使用GroovyClassLoader&quot; class=&quot;headerlink&quot; title=&quot;3.使用GroovyClassLoader&quot;&gt;&lt;/a&gt;3.使用&lt;code&gt;GroovyClassLoader&lt;/code&gt;&lt;/h5&gt;&lt;p&gt;&lt;code&gt;GroovyClassLoader&lt;/code&gt;功能和Java中的&lt;code&gt;ClassLoader&lt;/code&gt;功能类似，但可以加载类或脚本，持有一个它所创建的所有类的引用，因此很容易造成内存泄露，尤其当你两次执行同一脚本时，比如一个字符串，那么你将获得两个不同的类，因此做脚本的缓存是必不可少的。&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IllegalAccessException, InstantiationException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        GroovyClassLoader classLoader = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; GroovyClassLoader();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Class&amp;lt;? &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; GroovyObject&amp;gt; clazz = classLoader.parseClass(&lt;span class=&quot;string&quot;&gt;&quot;class Foo &amp;#123; void doIt() &amp;#123; println \&quot;ok\&quot; &amp;#125; &amp;#125;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        GroovyObject obj =clazz.newInstance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        obj.invokeMethod(&lt;span class=&quot;string&quot;&gt;&quot;doIt&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;4-使用GroovyScriptEngine&quot;&gt;&lt;a href=&quot;#4-使用GroovyScriptEngine&quot; class=&quot;headerlink&quot; title=&quot;4.使用GroovyScriptEngine&quot;&gt;&lt;/a&gt;4.使用&lt;code&gt;GroovyScriptEngine&lt;/code&gt;&lt;/h5&gt;&lt;p&gt;&lt;code&gt;GroovyScriptEngine&lt;/code&gt;从指定的位置（文件系统，URL，数据库等等）加载Groovy脚本，并且随着脚本变化可重新加载它们。和&lt;code&gt;GroovyShell&lt;/code&gt;一样，&lt;code&gt;GroovyScriptEngine&lt;/code&gt;也可以传进变量值返回脚本的计算结果。这样我们可以把一些可用的计算公式或计算条件写入Groovy脚本中来执行应用计算。当这些公式或计算条件变更时，我们可更方便地进行更改计算。&lt;br&gt;例如：&lt;/p&gt;
&lt;p&gt;SimpleScript.groovy&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;println &lt;span class=&quot;string&quot;&gt;&quot;Welcome to &lt;span class=&quot;variable&quot;&gt;$language&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;The End&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;ScriptEngineTest.java&lt;/p&gt;
&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; class ScriptEngineTest &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; main(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; args[]) &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; ResourceException, ScriptException, IOException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt;[] roots = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt;[]&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;/Users/liuxinyu/code/github/Learning-code-demo/groovy-learning/src/main/java/org/bugkillers/groovy/test/zhenghe/&quot;&lt;/span&gt;&amp;#125;;&lt;span class=&quot;comment&quot;&gt;//定义Groovy脚本引擎的根路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        GroovyScriptEngine engine = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; GroovyScriptEngine(roots);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Binding binding = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Binding();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        binding.setVariable(&lt;span class=&quot;string&quot;&gt;&quot;language&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Groovy&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;Object&lt;/span&gt; value = engine.run(&lt;span class=&quot;string&quot;&gt;&quot;SimpleScript.groovy&quot;&lt;/span&gt;, binding);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;assert&lt;/span&gt; value.equals(&lt;span class=&quot;string&quot;&gt;&quot;The End&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;5-使用CompilationUnit&quot;&gt;&lt;a href=&quot;#5-使用CompilationUnit&quot; class=&quot;headerlink&quot; title=&quot;5.使用CompilationUnit&quot;&gt;&lt;/a&gt;5.使用&lt;code&gt;CompilationUnit&lt;/code&gt;&lt;/h5&gt;&lt;p&gt;我们甚至直接依靠 &lt;code&gt;org.codehaus.groovy.control.CompilationUnit&lt;/code&gt; 类在编译时执行更多的指令。该类负责确定编译的各种步骤，可以让我们引入更多新的步骤，或者甚至停止各种编译阶段。比如说在联合编译器中如何生成存根。&lt;br&gt;但是，不建议重写 &lt;code&gt;CompilationUnit&lt;/code&gt;，如果没有其他的办法时才应该这样做。 &lt;/p&gt;
&lt;h5 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h5&gt;&lt;p&gt;在本次接入使用的是第三种使用&lt;code&gt;GroovyClassLoader&lt;/code&gt;来解析脚本，并将生成后的脚本class进行缓存后面再重新使用，在这块遇到的问题是程序运行一段时间后突然爆出JVM&lt;code&gt;perm&lt;/code&gt;使用达到100%并且gc无法回收，最终导致服务down掉，于是开始分析日志。&lt;br&gt;发现到都是在Groovy的ClassLoader在load class的时候发生的&lt;br&gt;&lt;img src=&quot;http://7xqxc9.com1.z0.glb.clouddn.com/groovy1-perm.png&quot; width=&quot;70%&quot; height=&quot;70%&quot;&gt;&lt;/p&gt;
&lt;p&gt;于是在仔细分析&lt;code&gt;GroovyClassLoader&lt;/code&gt;，发现loader每次加载class都会生成一个脚本对应的class对象，并new一个InnerLoader去加载这个对象，而InnerLoader和脚本对象都无法在gc的时候被回收运行一段时间后将perm占满，一直触发fullgc。&lt;/p&gt;
&lt;p&gt;在分析一下class为什么没有被卸载，我们都知道，在JVM中想要将JVM中的类卸载必须满足这几个条件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;该类所有的实例都已经被GC，也就是JVM中不存在该Class的任何实例；&lt;/li&gt;
&lt;li&gt;加载该类的ClassLoader已经被GC；&lt;/li&gt;
&lt;li&gt;该类的java.lang.Class对象没有在任何地方被引用，如不能在任何地方通过反射访问该类的方法。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;然而在本次开发中错误的使用了&lt;code&gt;ClassLoader&lt;/code&gt;，为了减少内存消耗将其定义成了一个全局的&lt;code&gt;GroovyClassLoader&lt;/code&gt;，那么这个全局的Loader是在整个JVM的声明周期中都是存活了，所以只要是加载过一次的脚本的class回收都要前置于这个全局的Loader回收，同时在&lt;code&gt;GroovyClassLoader&lt;/code&gt;代码中有一个class对象的缓存，进一步跟下去，发现每次编译脚本时都会在Map中缓存这个对象，即：&lt;code&gt;setClassCacheEntry(clazz)&lt;/code&gt;。每次groovy编译脚本后，都会缓存该脚本的Class对象，下次编译该脚本时，会优先从缓存中读取，这样节省掉编译的时间。这个缓存的Map由&lt;code&gt;GroovyClassLoader&lt;/code&gt;持有，key是脚本的类名，这就导致每个脚本对应的class对象都存在引用，无法被gc清理掉。&lt;/p&gt;
&lt;p&gt;一个ClassLoader对于同一个名字的类只能加载一次，都由&lt;code&gt;GroovyClassLoader&lt;/code&gt;加载，那么当一个脚本里定义了FOO这个类之后，另外一个脚本再定义一个FOO类的话，&lt;code&gt;GroovyClassLoader&lt;/code&gt;就无法加载了。为什么这里会每次执行都会加载？&lt;br&gt;这是因为对于同一个groovy脚本，groovy执行引擎都会不同的命名，且命名与时间戳有关系。当传入text时，class对象的命名规则为：&lt;code&gt;&amp;quot;script&amp;quot; + System.currentTimeMillis() + Math.abs(text.hashCode()) + &amp;quot;.groovy&amp;quot;&lt;/code&gt;。这就导致就算groovy脚本未发生任何变化，每次执行parse方法都会新生成一个脚本对应的class对象，且由&lt;code&gt;GroovyClassLoader&lt;/code&gt;进行加载，不断增大perm区。&lt;/p&gt;
&lt;h4 id=&quot;最终结论&quot;&gt;&lt;a href=&quot;#最终结论&quot; class=&quot;headerlink&quot; title=&quot;最终结论&quot;&gt;&lt;/a&gt;最终结论&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;单独的脚本加载请使用单独的&lt;code&gt;ClassLoader&lt;/code&gt;，同时对生成的class对象缓存&lt;/li&gt;
&lt;li&gt;不必要在&lt;code&gt;GroovyClassLoader&lt;/code&gt;parse class的时候加入时间戳，这样反而影响加载的效率&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关于&lt;code&gt;GroovyClassLoader&lt;/code&gt;可以看一下这篇文章&lt;a href=&quot;http://johnnyjian.iteye.com/blog/1847151?spm=5176.blog2357.yqblogcon1.8.b6Xi4z&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Groovy深入探索——Groovy的ClassLoader体系&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;二部&quot;&gt;&lt;a href=&quot;#二部&quot; class=&quot;headerlink&quot; title=&quot;二部&quot;&gt;&lt;/a&gt;二部&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;“衣带渐宽终不悔，为伊消得人憔悴。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;问题-1&quot;&gt;&lt;a href=&quot;#问题-1&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h4&gt;&lt;p&gt;在经历了一次优化之后性能在一部分上得到了提升，但是好景不长，在逐渐加大程序的访问的QPS，突然又出现了FullGC现象并且服务不可用，于是立即登录服务器查看JVM状态。    &lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;jstat&lt;/code&gt;  查看当前gc情况&lt;br&gt;&lt;img src=&quot;http://7xqxc9.com1.z0.glb.clouddn.com/groovygroovy1-jmap.png&quot; width=&quot;70%&quot; height=&quot;70%&quot;&gt;    &lt;/p&gt;
&lt;p&gt;再使用&lt;code&gt;jstat&lt;/code&gt;  查看gc发生的原因&lt;br&gt;&lt;img src=&quot;http://7xqxc9.com1.z0.glb.clouddn.com/groovygroovy-jstat.png&quot; width=&quot;70%&quot; height=&quot;70%&quot;&gt;    &lt;/p&gt;
&lt;p&gt;通过上面两个数据(图一中第四列&lt;code&gt;P&lt;/code&gt;标示&lt;code&gt;perm&lt;/code&gt;区已经使用的百分比，从图中看一直是99%，图二中最后一列是&lt;code&gt;GCC&lt;/code&gt; - &lt;code&gt;gc cause&lt;/code&gt;也就是发生gc的原因也是&lt;code&gt;Permanent Generation Full&lt;/code&gt;)可以推断到引起fullGC的仍然是Perm区，于是考虑到是否是Perm区太小导致容易内存打满。    &lt;/p&gt;
&lt;p&gt;于是再使用&lt;code&gt;jmap&lt;/code&gt; 查看heap情况的perm区情况&lt;br&gt;&lt;img src=&quot;http://7xqxc9.com1.z0.glb.clouddn.com/groovygroovy-jmap-heap.png&quot; width=&quot;70%&quot; height=&quot;70%&quot;&gt;      &lt;/p&gt;
&lt;p&gt;发现Perm区大小为默认值大小82M左右，80多M的perm区竟然全都被打满并且无法被回收，这显然不正常。    &lt;/p&gt;
&lt;p&gt;关于java 1.7和1.6中Perm区的默认大小为82M请参考oracle的官网    &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Almost every JVM nowadays uses a separate region of memory, called the Permanent Generation (orPermGen for short), to hold internal representations of java classes. PermGen is also used to store more information – find out the details from &lt;a href=&quot;https://blogs.oracle.com/jonthecollector/entry/presenting_the_permanent_generation&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;this post&lt;/a&gt; if you are interested – but for our article it is safe to assume that only the class definitions are being stored in PermGen. The default size of this region on my two machines running java 1.7 is not a very impressive 82MB.        &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;有过第一次的FullGC的问题修复的经验之后，推断还是在Java使用&lt;code&gt;GroovyClassLoader&lt;/code&gt;加载Groovy脚本的时候发生了问题，于是想要通过一个小的demo来复现一下。&lt;/p&gt;
&lt;p&gt;测试脚本：&lt;code&gt;ScriptRule.groovy&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ScriptRule&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        println(&lt;span class=&quot;string&quot;&gt;&#39;script rule exce&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;测试Java类：&lt;code&gt;ClassLoaderTest.java&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; ClassLoaderTest &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; main(String[] args) &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException, IllegalAccessException, InstantiationException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            String path = &lt;span class=&quot;string&quot;&gt;&quot;/xxx/ScriptRule.groovy&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            GroovyClassLoader classLoader = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; GroovyClassLoader(ClassLoaderTest.&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;.getClassLoader());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;Class&lt;/span&gt; helloClass = classLoader.parseClass(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;File&lt;/span&gt;(path));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            GroovyObject instance = (GroovyObject) helloClass.newInstance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            instance.invokeMethod(&lt;span class=&quot;string&quot;&gt;&quot;exec&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Thread.sleep(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;指定VM参数：&lt;code&gt;-XX:+TraceClassLoading      -XX:+TraceClassUnloading      -XX:+CMSClassUnloadingEnabled      -Xloggc:./gc.log    -XX:+PrintGCDetails      -XX:+PrintGCDateStamps      -XX:PermSize=15m      -XX:MaxPermSize=20m      -Xms100m      -Xmx100m      -XX:+HeapDumpOnOutOfMemoryError     -XX:HeapDumpPath=./heapdump.hprof      -XX:+UseConcMarkSweepGC&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;由VM参数(&lt;code&gt;-XX:MaxPermSize=20m&lt;/code&gt;)可见Perm区的最大值调整为20M以方便复现问题,同时在Java代码中通过一个死循环来不断的初始化脚本并调用脚本中方法。&lt;/p&gt;
&lt;p&gt;经过一次测试后分析了一下GC log，果然出现了Perm区溢出，和上述问题中的现象一模一样。于是带着问题开始查找解决方案，最终找到一个比较相似的问题&lt;a href=&quot;http://stackoverflow.com/questions/27451058/groovy-update-causing-a-ton-of-dead-groovyclassloaders-in-permgen&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Groovy update causing a ton of dead GroovyClassLoaders in PermGen&lt;/a&gt;，尝试了一下SO上给出的解决方法，在Groovy运行时加入了一个参数&lt;code&gt;System.setProperty(&amp;quot;groovy.use.classvalue&amp;quot;,&amp;quot;true&amp;quot;);&lt;/code&gt; 或者在JVM启动时加入&lt;code&gt;-Dgroovy.use.classvalue=true&lt;/code&gt;,加入这参数后发现当不断的通过&lt;code&gt;GroovyClassLoader&lt;/code&gt;加载新的脚本类时在占用率快要达到100%后又被gc掉了。&lt;/p&gt;
&lt;h3 id=&quot;三部&quot;&gt;&lt;a href=&quot;#三部&quot; class=&quot;headerlink&quot; title=&quot;三部&quot;&gt;&lt;/a&gt;三部&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;“众里寻他千百度，蓦然回首，那人却在灯火阑珊处。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Groovy版本：&lt;/p&gt;
&lt;h4 id=&quot;备&quot;&gt;&lt;a href=&quot;#备&quot; class=&quot;headerlink&quot; title=&quot;备&quot;&gt;&lt;/a&gt;备&lt;/h4&gt;&lt;p&gt;参考文章列表       &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.jikexueyuan.com/project/groovy-introduction/integrating-groovy-applications.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;极客学院&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://yq.aliyun.com/articles/2357&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Groovy的一些坑&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://hellojava.info/?tag=groovy-permgen-oom&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;正确使用Groovy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.codelast.com/%E5%8E%9F%E5%88%9B%EF%BC%88%E7%BF%BB%E8%AF%91%EF%BC%89%E4%BB%80%E4%B9%88%E6%98%AFjava%E7%9A%84%E6%B0%B8%E4%B9%85%E4%BB%A3%EF%BC%88permgen%EF%BC%89%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Java永久代泄露&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;给Java加点料&quot;&gt;&lt;a href=&quot;#给Java加点料&quot; class=&quot;headerlink&quot; title=&quot;给Java加点料&quot;&gt;&lt;/a&gt;给Java加点料&lt;/h3&gt;&lt;p&gt;最近在研究服务的动态校验规则，在厌倦了使用&lt;code&gt;Java&lt;/code&gt;的静态语言进行校验时，开始尝试使用可以运行在JVM的脚本语言（&lt;code&gt;Groovy&lt;/code&gt;,&lt;code&gt;Scala&lt;/code&gt;,&lt;code&gt;Clojure&lt;/code&gt;,&lt;code&gt;JRuby&lt;/code&gt;,&lt;code&gt;JPython&lt;/code&gt;）进行规则的&lt;code&gt;DSL&lt;/code&gt;开发,在运行期通过改变&lt;code&gt;DSL&lt;/code&gt;来动态的改变规则来达到动态校验的目的，通过一段时间的调研最终选型使用&lt;code&gt;Groovy&lt;/code&gt;进行开发。&lt;br&gt;选用&lt;code&gt;Groovy&lt;/code&gt;的原因主要有：    &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;学习成本较低&lt;/li&gt;
&lt;li&gt;元编程能力较强&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Gradle&lt;/code&gt;的流行&lt;/li&gt;
&lt;li&gt;函数式编程&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关于运行在JVM的脚步语言可以参考一下这几篇文章：&lt;a href=&quot;http://coolshell.cn/articles/2631.html&quot;&gt;五大基于JVM的脚本语言&lt;/a&gt;、&lt;a href=&quot;http://www.ibm.com/developerworks/cn/java/j-jn16/&quot;&gt;Java下一代&lt;/a&gt;、&lt;a href=&quot;http://www.oschina.net/question/213217_45561&quot;&gt;9个杀手级JVM编程语言&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;Groovy&lt;/code&gt;的&lt;code&gt;DSL&lt;/code&gt;语法和校验API都准备就绪后就开始了在&lt;code&gt;Java&lt;/code&gt;应用中集成，整个集成到最后优化完差不多耗时2个星期，过程相当的波折，下面就记录一下在集成&lt;code&gt;Groovy&lt;/code&gt;中遇到问题到处理问题的三部曲。&lt;/p&gt;
    
    </summary>
    
      <category term="Groovy" scheme="http://blog.bugk.info/categories/Groovy/"/>
    
    
      <category term="Groovy" scheme="http://blog.bugk.info/tags/Groovy/"/>
    
      <category term="Java" scheme="http://blog.bugk.info/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>java中实现字符串反转的几种方法</title>
    <link href="http://blog.bugk.info/2016/04/07/Java%E4%B8%AD%E5%AE%9E%E7%8E%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%8D%E8%BD%AC%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
    <id>http://blog.bugk.info/2016/04/07/Java中实现字符串反转的几种方法/</id>
    <published>2016-04-07T06:52:23.000Z</published>
    <updated>2016-04-07T07:07:10.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;今天记录一个在面试中经常被问到的一个字符串反转的问题（Java代码实现）～&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;使用栈实现&quot;&gt;&lt;a href=&quot;#使用栈实现&quot; class=&quot;headerlink&quot; title=&quot;使用栈实现&quot;&gt;&lt;/a&gt;使用栈实现&lt;/h3&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 通过栈&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; source&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;String &lt;span class=&quot;title&quot;&gt;reverse01&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String source)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;[] chars = source.toCharArray();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Stack&amp;lt;Character&amp;gt; stack = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Stack&amp;lt;Character&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; ch : chars) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        stack.push(ch);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String &lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (!stack.isEmpty()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt; += stack.pop();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;通过异或实现&quot;&gt;&lt;a href=&quot;#通过异或实现&quot; class=&quot;headerlink&quot; title=&quot;通过异或实现&quot;&gt;&lt;/a&gt;通过异或实现&lt;/h3&gt;&lt;p&gt;这个看起来稍高端一些    &lt;/p&gt;
&lt;figure class=&quot;highlight vbscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 通过异或&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param source&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; static &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; reverse02(&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; source) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    char[] chars = source.toCharArray();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; start = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt; = chars.length - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (start &amp;lt; &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        chars[start] ^= chars[&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        chars[&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;] ^= chars[start];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        chars[start] ^= chars[&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        start++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;(chars);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;使用StringBuffer实现&quot;&gt;&lt;a href=&quot;#使用StringBuffer实现&quot; class=&quot;headerlink&quot; title=&quot;使用StringBuffer实现&quot;&gt;&lt;/a&gt;使用StringBuffer实现&lt;/h3&gt;&lt;figure class=&quot;highlight gherkin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt; 通过StringBuffer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;@param source&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;@return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static String reverse03(String source) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return new StringBuffer(source).reverse().toString();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;使用递归实现&quot;&gt;&lt;a href=&quot;#使用递归实现&quot; class=&quot;headerlink&quot; title=&quot;使用递归实现&quot;&gt;&lt;/a&gt;使用递归实现&lt;/h3&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 通过递归&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param source&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;reverse04&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String source)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; length = source.length();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (length &amp;lt;= &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; source;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String left = source.substring(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, length / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String right = source.substring(length / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, length);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; reverse04(right) + reverse04(left);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;使用charAt实现&quot;&gt;&lt;a href=&quot;#使用charAt实现&quot; class=&quot;headerlink&quot; title=&quot;使用charAt实现&quot;&gt;&lt;/a&gt;使用charAt实现&lt;/h3&gt;&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 使用string charAt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param source&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; String reverse05(String &lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; length = &lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;.length();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String &lt;span class=&quot;keyword&quot;&gt;reverse&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;reverse&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;.charAt(i) + &lt;span class=&quot;keyword&quot;&gt;reverse&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;reverse&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;使用for循环实现&quot;&gt;&lt;a href=&quot;#使用for循环实现&quot; class=&quot;headerlink&quot; title=&quot;使用for循环实现&quot;&gt;&lt;/a&gt;使用for循环实现&lt;/h3&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 使用for循环&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param source&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;reverse06&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String source)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;[] &lt;span class=&quot;built_in&quot;&gt;array&lt;/span&gt; = source.toCharArray();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String reverse = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;built_in&quot;&gt;array&lt;/span&gt;.length - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i--)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        reverse += &lt;span class=&quot;built_in&quot;&gt;array&lt;/span&gt;[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; reverse;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;使用二分法实现&quot;&gt;&lt;a href=&quot;#使用二分法实现&quot; class=&quot;headerlink&quot; title=&quot;使用二分法实现&quot;&gt;&lt;/a&gt;使用二分法实现&lt;/h3&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 二分法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param source&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;reverse07&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String source)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;[] s = source.toCharArray();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n = s.length - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; halfLength = n / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt;= halfLength; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; temp = s[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s[i] = s[n - i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s[n - i] = temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; String(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;详细代码请点&lt;a href=&quot;https://github.com/qq291462491/Algorithms/tree/master/algorithm/src/main/java/org/bugkillers/algorithm/string&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;代码出处&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;今天记录一个在面试中经常被问到的一个字符串反转的问题（Java代码实现）～&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Java" scheme="http://blog.bugk.info/categories/Java/"/>
    
    
      <category term="Java" scheme="http://blog.bugk.info/tags/Java/"/>
    
      <category term="字符串" scheme="http://blog.bugk.info/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="算法" scheme="http://blog.bugk.info/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>菜谱</title>
    <link href="http://blog.bugk.info/2016/03/15/%E8%8F%9C%E8%B0%B1/"/>
    <id>http://blog.bugk.info/2016/03/15/菜谱/</id>
    <published>2016-03-15T02:15:32.000Z</published>
    <updated>2016-03-15T03:13:22.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;最近工作比较忙，技术博客更新比较慢，于是花时间整理一下不怎么耗费经历的一个记录文章～&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;热菜&quot;&gt;&lt;a href=&quot;#热菜&quot; class=&quot;headerlink&quot; title=&quot;热菜&quot;&gt;&lt;/a&gt;热菜&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;葱爆羊肉&lt;/li&gt;
&lt;li&gt;回锅肉&lt;/li&gt;
&lt;li&gt;腊肉荷兰豆&lt;/li&gt;
&lt;li&gt;山药木耳&lt;/li&gt;
&lt;li&gt;芹菜炖土豆&lt;/li&gt;
&lt;li&gt;酸辣白菜&lt;/li&gt;
&lt;li&gt;西红柿鸡蛋&lt;/li&gt;
&lt;li&gt;香菇油菜&lt;/li&gt;
&lt;li&gt;地三鲜&lt;/li&gt;
&lt;li&gt;蒜薹炒肉&lt;/li&gt;
&lt;li&gt;莴笋炒肉&lt;/li&gt;
&lt;li&gt;烧茄子&lt;/li&gt;
&lt;li&gt;尖椒鸡蛋&lt;/li&gt;
&lt;li&gt;韭菜鸡蛋&lt;/li&gt;
&lt;li&gt;酸辣土豆丝&lt;/li&gt;
&lt;li&gt;酸菜白肉&lt;/li&gt;
&lt;li&gt;冬瓜丸子&lt;/li&gt;
&lt;li&gt;冬瓜排骨&lt;/li&gt;
&lt;li&gt;小炒肉&lt;/li&gt;
&lt;li&gt;大辣椒炒肉&lt;/li&gt;
&lt;li&gt;西葫芦炒肉&lt;/li&gt;
&lt;li&gt;尖椒肉丝&lt;/li&gt;
&lt;li&gt;炖南瓜&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;凉菜&quot;&gt;&lt;a href=&quot;#凉菜&quot; class=&quot;headerlink&quot; title=&quot;凉菜&quot;&gt;&lt;/a&gt;凉菜&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;拍黄瓜&lt;/li&gt;
&lt;li&gt;葱油木耳&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;最近工作比较忙，技术博客更新比较慢，于是花时间整理一下不怎么耗费经历的一个记录文章～&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="生活" scheme="http://blog.bugk.info/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="吃" scheme="http://blog.bugk.info/tags/%E5%90%83/"/>
    
      <category term="生活" scheme="http://blog.bugk.info/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="菜谱" scheme="http://blog.bugk.info/tags/%E8%8F%9C%E8%B0%B1/"/>
    
  </entry>
  
  <entry>
    <title>九句话</title>
    <link href="http://blog.bugk.info/2016/02/18/%E4%B9%9D%E5%8F%A5%E8%AF%9D/"/>
    <id>http://blog.bugk.info/2016/02/18/九句话/</id>
    <published>2016-02-18T05:38:55.000Z</published>
    <updated>2016-02-18T06:08:18.000Z</updated>
    
    <content type="html">&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&quot;http://7xqxc9.com1.z0.glb.clouddn.com/bugkkoucai01.jpg&quot; width=&quot;100%&quot; height=&quot;50%&quot;&gt;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;http://7xqxc9.com1.z0.glb.clouddn.com/bugkkoucai02.jpg&quot; width=&quot;100%&quot; height=&quot;50%&quot;&gt;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;http://7xqxc9.com1.z0.glb.clouddn.com/bugkkoucai03.jpg&quot; width=&quot;100%&quot; height=&quot;50%&quot;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;http://7xqxc9.com1.z0.glb.clouddn.com/bugkkoucai04.jpg&quot; width=&quot;100%&quot; height=&quot;50%&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;http://7xqxc9.com1.z0.glb.clouddn.com/bugkkoucai05.jpg&quot; width=&quot;100%&quot; height=&quot;50%&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;http://7xqxc9.com1.z0.glb.clouddn.com/bugkkoucai06.jpg&quot; width=&quot;100%&quot; height=&quot;50%&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;http://7xqxc9.com1.z0.glb.clouddn.com/bugkkoucai07.jpg&quot; width=&quot;100%&quot; height=&quot;50%&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;http://7xqxc9.com1.z0.glb.clouddn.com/bugkkoucai08.jpg&quot; width=&quot;100%&quot; height=&quot;50%&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;http://7xqxc9.com1.z0.glb.clouddn.com/bugkkoucai09.jpg&quot; width=&quot;100%&quot; height=&quot;50%&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&quot;http://7xqxc9.com1.z0.glb.clouddn.com/bugkkoucai01.jpg&quot; width=&quot;100%&quot; height=&quot;50%&quot;&gt;&lt;/th&gt;
&lt;th style=&quot;text-a
    
    </summary>
    
      <category term="随笔" scheme="http://blog.bugk.info/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="口才" scheme="http://blog.bugk.info/tags/%E5%8F%A3%E6%89%8D/"/>
    
      <category term="鼓励" scheme="http://blog.bugk.info/tags/%E9%BC%93%E5%8A%B1/"/>
    
  </entry>
  
  <entry>
    <title>序</title>
    <link href="http://blog.bugk.info/2016/02/18/%E5%BA%8F/"/>
    <id>http://blog.bugk.info/2016/02/18/序/</id>
    <published>2016-02-18T04:27:21.000Z</published>
    <updated>2016-02-18T05:31:33.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;font size=&quot;4&quot; face=&quot;楷体&quot; color=&quot;red&quot;&gt;恐怖 &lt;/font&gt;因神秘而诱惑&lt;br&gt;真相因恐怖而 &lt;font size=&quot;4&quot; face=&quot;楷体&quot; color=&quot;red&quot;&gt; 遥远 &lt;/font&gt;&lt;br&gt;当历尽艰险的脚步走进蒙着&lt;font size=&quot;4&quot; face=&quot;楷体&quot; color=&quot;black&quot;&gt; 黑纱 &lt;/font&gt;的谜底&lt;br&gt;当 &lt;font size=&quot;4&quot; face=&quot;楷体&quot; color=&quot;red&quot;&gt; 战栗抖动 &lt;/font&gt;的手猛地触及积满灰尘的真相&lt;br&gt;死亡同时到达&lt;br&gt;像 &lt;font size=&quot;4&quot; face=&quot;楷体&quot; color=&quot;red&quot;&gt; 血色 &lt;/font&gt;的绣球掷出，谁会伸出双手去&lt;br&gt;赴向 &lt;font size=&quot;4&quot; face=&quot;楷体&quot; color=&quot;red&quot;&gt; 天堂 &lt;/font&gt;&lt;br&gt;因而堕入无法 &lt;font size=&quot;4&quot; face=&quot;楷体&quot; color=&quot;black&quot;&gt; 逃遁 &lt;/font&gt;的网…&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;font size=&quot;4&quot; face=&quot;楷体&quot; color=&quot;red&quot;&gt;恐怖 &lt;/font&gt;因神秘而诱惑&lt;br&gt;真相因恐怖而 &lt;font size=&quot;4&quot; face=&quot;楷体&quot; color=&quot;red&quot;&gt; 遥远 &lt;/font&gt;&lt;br&gt;当历尽艰险的脚步走进蒙着&lt;font siz
    
    </summary>
    
      <category term="随笔" scheme="http://blog.bugk.info/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="小说" scheme="http://blog.bugk.info/tags/%E5%B0%8F%E8%AF%B4/"/>
    
      <category term="序" scheme="http://blog.bugk.info/tags/%E5%BA%8F/"/>
    
      <category term="推理" scheme="http://blog.bugk.info/tags/%E6%8E%A8%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Groovy学习笔记（二）：初识</title>
    <link href="http://blog.bugk.info/2016/02/15/Groovy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E5%88%9D%E8%AF%86/"/>
    <id>http://blog.bugk.info/2016/02/15/Groovy学习笔记（二）：初识/</id>
    <published>2016-02-15T07:31:27.000Z</published>
    <updated>2016-02-15T07:35:57.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
      <category term="Groovy" scheme="http://blog.bugk.info/categories/Groovy/"/>
    
    
      <category term="Groovy" scheme="http://blog.bugk.info/tags/Groovy/"/>
    
  </entry>
  
  <entry>
    <title>Groovy学习笔记（三）：语法</title>
    <link href="http://blog.bugk.info/2016/02/15/Groovy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E8%AF%AD%E6%B3%95/"/>
    <id>http://blog.bugk.info/2016/02/15/Groovy学习笔记（三）：语法/</id>
    <published>2016-02-15T07:31:27.000Z</published>
    <updated>2016-02-15T07:35:32.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
      <category term="Groovy" scheme="http://blog.bugk.info/categories/Groovy/"/>
    
    
      <category term="Groovy" scheme="http://blog.bugk.info/tags/Groovy/"/>
    
  </entry>
  
  <entry>
    <title>Groovy学习笔记（一）：简介</title>
    <link href="http://blog.bugk.info/2016/02/15/Groovy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E7%AE%80%E4%BB%8B/"/>
    <id>http://blog.bugk.info/2016/02/15/Groovy学习笔记（一）：简介/</id>
    <published>2016-02-15T07:31:27.000Z</published>
    <updated>2016-02-15T07:32:28.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
      <category term="Groovy" scheme="http://blog.bugk.info/categories/Groovy/"/>
    
    
      <category term="Groovy" scheme="http://blog.bugk.info/tags/Groovy/"/>
    
  </entry>
  
  <entry>
    <title>2015年终总结</title>
    <link href="http://blog.bugk.info/2016/02/07/2015%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    <id>http://blog.bugk.info/2016/02/07/2015年终总结/</id>
    <published>2016-02-06T17:58:17.000Z</published>
    <updated>2016-03-01T04:07:04.000Z</updated>
    
    <content type="html">&lt;p&gt;引用《盗墓笔记》中的一句话做序：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;心在桃圆外，兀自笑春风!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;/images/shoutu.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;启程&quot;&gt;&lt;a href=&quot;#启程&quot; class=&quot;headerlink&quot; title=&quot;启程&quot;&gt;&lt;/a&gt;启程&lt;/h3&gt;&lt;p&gt;火车依然没有停止，窗前的我望着天空的繁星，久违的天空，繁星在闪烁，似乎是在指引我回家的路。耳边的重金属的音乐似乎不能平复此刻急切回家的心情。同样站在窗前的一个身高和我差不多但体型略微发福的哥们，抱着正在熟睡的儿子看着窗外发呆。&lt;br&gt;&lt;strong&gt;刹那间我仿佛看到了几年以后我的身影。&lt;/strong&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;流水账&quot;&gt;&lt;a href=&quot;#流水账&quot; class=&quot;headerlink&quot; title=&quot;流水账&quot;&gt;&lt;/a&gt;流水账&lt;/h3&gt;&lt;p&gt;曾经有很多次想对过来的这整个2015年做一个整体的踪迹和简单的规划，但每次提起笔来总是整理不好思绪或者被各种原因打断了，现在终于有时间好好整理一下了，希望不是一笔毫无头绪的流水账，即使:它就是一笔流水账。&lt;/p&gt;
&lt;h3 id=&quot;生活琐碎&quot;&gt;&lt;a href=&quot;#生活琐碎&quot; class=&quot;headerlink&quot; title=&quot;生活琐碎&quot;&gt;&lt;/a&gt;生活琐碎&lt;/h3&gt;&lt;p&gt;2015年可能是我从出生到现在最忙碌的一年，甚至比读书的时候都要忙了好几倍，不过也是让我感觉最充实的一年，我找到的自己理想的事业，没错就是互联网。虽然是一个底层的小码农，但是体验到了计算机编程给我带来的快乐，体会到了互联网对整个人类的改变。早上7点多起床到晚上11点回家，这几乎成了常态，但是我乐此不疲，陶醉于工作之中。也许有的看官会问互联网不都是弹性工作制吗？为什么要这么早上班。其实主要原因是在2015年初我换了工作，从传统软件行业调到了互联网。但是住的的地方没有换，对我们这种刚刚北漂的应届毕业生实在是换不起北京的房子，押一付三的房租压的喘不过来气。换工作的时候也没有有考虑太多就直接去了，结果上班2小时路程下班1个半小时，碰上堵车3个小时都不一定能到。最终的结果就是每天花在路上的时间快到了2个小时，不过每天回到家里都有老婆给做好的饭，想想就很幸福，日子过得像蜜一样甜，虽然辛苦点但是感觉很幸福。年轻就应该受点苦，以后都会好起来的，房子会有的，车子会有的，老婆是湖南人，距离比较远，房子是必须有的，不然丈母娘不会同意的，哈哈～&lt;br&gt;不过年中五、六月份老婆要回学校答辩，差不多两个月不在，说实话一个人的感觉真的好难受。终于熬了两个月媳妇毕业了，老婆的东家就是我上家的东家，职位和福利也都还不错。两个人暗自下决心一定要在北京拼出自己的一番天地。&lt;/p&gt;
&lt;h3 id=&quot;住院&quot;&gt;&lt;a href=&quot;#住院&quot; class=&quot;headerlink&quot; title=&quot;住院&quot;&gt;&lt;/a&gt;住院&lt;/h3&gt;&lt;p&gt;日子继续过着，突然有一天我感觉自己菊花有些不舒服，这两天正好赶上职级答辩，我想是自己太紧张了，前一天又熬夜写ppt，可能是太累了，让细菌钻了篓子，有点发炎，一开始我以为和前两年一样吃点消炎药输输消炎药就好了，本人比较嘴硬一开始都没跟老婆提，以为自己能好，但是刚刚过了一天我发现我已经不能正常走路了，迈一步都是撕心裂肺的疼，老婆好像发现了我的异样，我也撑不住跟老婆说了。二话不说老婆就把我拉去了医院，一开始看了个急诊，本着保守治疗的念想，让医生给开了几瓶消炎药打了三天，上午去打吊瓶，下午去上班，但是三天过去了，好像没有啥效果，依然还是疼，打吊瓶的时候我也自己分析过自己的病情，应该是肛周脓肿，肛瘘，或者是痔疮中的一种。不过痔疮没有我这么疼的，输液的时间比较久，就顺便逛着知乎相关的话题，看着知乎上的大神们像撸代码撸着自己的发病到治疗的过程讲的是绘声绘色，但是我还不能笑，一笑菊花就疼的要命呀，不过看经历好像这个病都要手术，想想我还有点怕。回想我第一发病，好像还有点像，无外乎都是排便不规律，便秘，吃辣椒，喝酒……，最近半年以来好像都没有好好上厕所，早上7点多爬起来10点到公司，公司7，8百人就三个坑，每次去都有一排人在那排队，等排到我的时候早都没感觉了，早晚在路上想上个厕所却发现13号线整个线路的厕所全都在装修不能用，还有那反人类设计的马桶，一蹲就要溅一屁股水，不感染才怪呢。所以每次就是每次都是憋着到家才解大号，久而久之便秘，感染，便秘，感染，恶性循环。输了三天液症状没有得到缓解，我和老婆就知不妙，这回看来不那么好处理了，于是果断挂了一个肛肠专科医院专家号，医生看了看，又捅了捅，没错被爆菊了，然后又看了看我反应，脸色阴沉了下来，我心想完了，手术是跑不了了。过了片刻医生说手术吧，没有给第二个选择，老婆也支持我让我做一个根治术，省的以后再复发。于是乎世纪大战就开始了，历经将近三个多星期，才勉强出院。三个星期从手术到后面的康复这辈子都不想再经历一次了，手术还好打个麻醉针就睡过去了，醒来就完事了，所谓的康复就是换药，就是站着进去，狼哭鬼嚎一通，然后再手捂着屁股扶着墙爬出来的过程，至于灌肠，大号注射器什么什么的这种重口味就不提了，出院后又被补一刀的小插曲也不提了。不过也有好基友过来看我，聊聊天，也不用忙工作上的事，同时最让我感动的是，住院的日子里面老婆都都不离不弃的陪在我身边照顾我，我真的好感动，好幸福，更加坚定了要努力为了自己爱的人去打拼，让他们幸福。经过这件事之后发现那个说21天可以养成一个习惯，真的很有道理，现在坚持早上喝一大杯蜂蜜水，微量活动个几分钟，肠道马上就有感觉了，再也不用为上班找不到厕所发愁了，每天早上一次，这个习惯到现在坚持了差不多5个月了，从来没便秘过。所以遇到便秘的朋友请一定要让他尝试一个习惯，改变生活方式，调整生物钟，比任何药物治疗都有效。最后再提一句～请善待你的菊花～。&lt;/p&gt;
&lt;h3 id=&quot;搬家&quot;&gt;&lt;a href=&quot;#搬家&quot; class=&quot;headerlink&quot; title=&quot;搬家&quot;&gt;&lt;/a&gt;搬家&lt;/h3&gt;&lt;p&gt;告别沙河，搬到回龙观，做起了观里人。&lt;/p&gt;
&lt;h3 id=&quot;工作&quot;&gt;&lt;a href=&quot;#工作&quot; class=&quot;headerlink&quot; title=&quot;工作&quot;&gt;&lt;/a&gt;工作&lt;/h3&gt;&lt;p&gt;很幸运能够加入到美团这个团队，对于我这个刚刚从传统行业转到互联网的小白来说简直再适合不过了，结识了很多大牛，学习了很多前沿的知识，养成了良好的编程习惯。当然要学习的东西很多，Groovy、Thrift、Guava、ZooKeeper、Linux、高并发等等，感觉一直有学不完的东西，同时也学习了美团基础组件平台的Octo、Mthrift等。更加幸运的是遇到了一个性格比较好的主管，组内气氛也不错，技术上也经常孵化一些新颖的东西，使得在做枯燥的业务的同时也不会丢掉太多技术。&lt;/p&gt;
&lt;h3 id=&quot;学习&quot;&gt;&lt;a href=&quot;#学习&quot; class=&quot;headerlink&quot; title=&quot;学习&quot;&gt;&lt;/a&gt;学习&lt;/h3&gt;&lt;p&gt;学习上的话Q1、Q2、Q3还算充实，Q4由于身体原因以及工作上比较忙基本没有学习，学习的话主要是公司的wiki以及个人的博客进行总结，也做过一些技术分享，后面也打算将之前的学习笔记陆续的迁移到这个博客中来。同时还特意买一个一个Kindle以便在上下班的时候可以给自己充电。&lt;br&gt;2015年读书列表，包含正在读的和已经读完的。     &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《深入理解Java虚拟机》  &lt;/li&gt;
&lt;li&gt;《Java与模式》 &lt;/li&gt;
&lt;li&gt;《Java并发编程的艺术》 &lt;/li&gt;
&lt;li&gt;《Git权威指南》 &lt;/li&gt;
&lt;li&gt;《Groovy程序设计》  &lt;/li&gt;
&lt;li&gt;《编写高质量代码：改善Java程序的151个建议》&lt;/li&gt;
&lt;li&gt;《解忧杂货店》&lt;/li&gt;
&lt;li&gt;《盗墓笔记》&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;晋级&quot;&gt;&lt;a href=&quot;#晋级&quot; class=&quot;headerlink&quot; title=&quot;晋级&quot;&gt;&lt;/a&gt;晋级&lt;/h3&gt;&lt;p&gt;职级评审的过程还算比较顺利，但是等待结果的过程还是比较煎熬的。最终付出总是会有回报的，成功从P4到升到P5。借此我明白了评价一个人不能光看技术，沟通、合作等软素质也是必不可少的。值得一提的是在做PPT的过程中我被Keynote的魅力所吸引，它比PPT要好太多了，。&lt;/p&gt;
&lt;h3 id=&quot;旅游&quot;&gt;&lt;a href=&quot;#旅游&quot; class=&quot;headerlink&quot; title=&quot;旅游&quot;&gt;&lt;/a&gt;旅游&lt;/h3&gt;&lt;p&gt;作为老婆的毕业旅行，我们一起去了天津，尽管景点都有些不尽如人意，也还是留下了很多美好的记忆&lt;br&gt;&lt;img src=&quot;/images/laopo.jpg&quot; width=&quot;40%&quot; height=&quot;40%&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;美食&quot;&gt;&lt;a href=&quot;#美食&quot; class=&quot;headerlink&quot; title=&quot;美食&quot;&gt;&lt;/a&gt;美食&lt;/h3&gt;&lt;p&gt;根据这一年的经验发现还是自己做的饭最好吃，整个一年来尝试了比较多的新花样，尝试了不少新菜，对小炒有了些心得，老婆也甚是喜欢，16年要继续做下去，哈哈~。&lt;/p&gt;
&lt;h3 id=&quot;游戏&quot;&gt;&lt;a href=&quot;#游戏&quot; class=&quot;headerlink&quot; title=&quot;游戏&quot;&gt;&lt;/a&gt;游戏&lt;/h3&gt;&lt;p&gt;2016年一直在玩的游戏——LOL，一直吵着要戒掉，但是。。。&lt;/p&gt;
&lt;h3 id=&quot;2016寄语&quot;&gt;&lt;a href=&quot;#2016寄语&quot; class=&quot;headerlink&quot; title=&quot;2016寄语&quot;&gt;&lt;/a&gt;2016寄语&lt;/h3&gt;&lt;p&gt;同样借用兴哥的一句话：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;既往不恋，纵情向前！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2016 TODO List    &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;去女朋友家里&lt;/li&gt;
&lt;li&gt;考驾照&lt;/li&gt;
&lt;li&gt;香港旅游&lt;/li&gt;
&lt;li&gt;筹备房子&lt;/li&gt;
&lt;li&gt;锻炼身体&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;后记&quot;&gt;&lt;a href=&quot;#后记&quot; class=&quot;headerlink&quot; title=&quot;后记&quot;&gt;&lt;/a&gt;后记&lt;/h3&gt;&lt;p&gt;参加完公司的年会收获颇丰，给2015年画上了一个完美的句号。昨天最好的表现就是明天最低的要求，感谢一路走过来的小伙伴，让我们一起脚踏实地，赢在2016！！！&lt;br&gt;&lt;img src=&quot;http://7xqxc9.com1.z0.glb.clouddn.com/bugk2015nian-zongjie-01.jpg&quot; width=&quot;50%&quot; height=&quot;50%&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;ps:文章持续更新中。。。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;引用《盗墓笔记》中的一句话做序：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;心在桃圆外，兀自笑春风!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;/images/shoutu.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;启程&quot;&gt;&lt;a href=&quot;#启程&quot; class=&quot;headerlink&quot; title=&quot;启程&quot;&gt;&lt;/a&gt;启程&lt;/h3&gt;&lt;p&gt;火车依然没有停止，窗前的我望着天空的繁星，久违的天空，繁星在闪烁，似乎是在指引我回家的路。耳边的重金属的音乐似乎不能平复此刻急切回家的心情。同样站在窗前的一个身高和我差不多但体型略微发福的哥们，抱着正在熟睡的儿子看着窗外发呆。&lt;br&gt;&lt;strong&gt;刹那间我仿佛看到了几年以后我的身影。&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="总结" scheme="http://blog.bugk.info/categories/%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="习惯" scheme="http://blog.bugk.info/tags/%E4%B9%A0%E6%83%AF/"/>
    
      <category term="总结" scheme="http://blog.bugk.info/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="晋级" scheme="http://blog.bugk.info/tags/%E6%99%8B%E7%BA%A7/"/>
    
  </entry>
  
  <entry>
    <title>Guava-Event-Bus 学习笔记</title>
    <link href="http://blog.bugk.info/2015/11/15/Guava-Event-Bus-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://blog.bugk.info/2015/11/15/Guava-Event-Bus-学习笔记/</id>
    <published>2015-11-15T06:12:56.000Z</published>
    <updated>2016-02-15T07:39:56.000Z</updated>
    
    <content type="html">&lt;p&gt;Guava的EventBus源码学习，基于Guava的18.0版本&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;分析者：&lt;a href=&quot;https://github.com/qq291462491&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Allen&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;1-背景简介&quot;&gt;&lt;a href=&quot;#1-背景简介&quot; class=&quot;headerlink&quot; title=&quot;1. 背景简介&quot;&gt;&lt;/a&gt;1. 背景简介&lt;/h3&gt;&lt;p&gt;EventBus是google的一个Java工具包其中的一个工具类，类似的有多个版本其中包括移植到Android端的&lt;a href=&quot;https://github.com/greenrobot/EventBus&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;greenrobot-EventBus&lt;/a&gt;&lt;br&gt;和改良的&lt;a href=&quot;https://github.com/square/otto&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;square-otto&lt;/a&gt;，功能基本都是一样的。此处主要是对Guava版的EventBus分析，关于&lt;a href=&quot;https://github.com/google/guava&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;guava代码地址&lt;/a&gt;。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;2-功能简介&quot;&gt;&lt;a href=&quot;#2-功能简介&quot; class=&quot;headerlink&quot; title=&quot;2. 功能简介&quot;&gt;&lt;/a&gt;2. 功能简介&lt;/h3&gt;&lt;h4 id=&quot;2-1-EventBus介绍&quot;&gt;&lt;a href=&quot;#2-1-EventBus介绍&quot; class=&quot;headerlink&quot; title=&quot;2.1 EventBus介绍&quot;&gt;&lt;/a&gt;2.1 EventBus介绍&lt;/h4&gt;&lt;p&gt;EventBus 是一个基于事件的一个发布/订阅框架，通过解耦发布者和订阅者简化事件传递，这里的事件可以理解为消息，本文中统一称为事件也就是 Event。通过EventBus可以简化生产者/消费者&lt;br&gt;这种模型，同时又可以通过Executor来控制线程，使用起来非常优雅灵活。异步的则使用AsyncEventBus，如果需要强制使EventBus同步执行则可以使用&lt;code&gt;@AllowConcurrentEvent&lt;/code&gt;注释方法。&lt;/p&gt;
&lt;h4 id=&quot;2-2-关键词&quot;&gt;&lt;a href=&quot;#2-2-关键词&quot; class=&quot;headerlink&quot; title=&quot;2.2 关键词&quot;&gt;&lt;/a&gt;2.2 关键词&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;事件(Event)：&lt;/strong&gt;又可称为消息，本文中统一用事件表示。其实就是一个对象，可以是网络请求返回的字符串，也可以是某个开关状态等等，用于订阅者和发布者之间的消息传递媒介。&lt;code&gt;事件类型(EventType)&lt;/code&gt;可以自由定义，一般是一个消息对象。&lt;br&gt;例如：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MessageEvent&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String message;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MessageEvent&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String message)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.message = message;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; message;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;EventBus支持一个订阅者来订阅多个类型的事件，Event的子类也可以被传递。  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;订阅者(Subscriber)：&lt;/strong&gt;订阅某种事件类型的对象，使用&lt;code&gt;@Subscribe&lt;/code&gt;注解来标明一个方法是用于订阅事件的方法。当有发布者发布这类事件后，被加注解的方法便可以执行，&lt;code&gt;事件响应函数&lt;/code&gt;。&lt;br&gt;使用EventBus将订阅者通过 register 接口订阅来定义，unregister 接口退订。  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;发布者(Publisher)：&lt;/strong&gt;发布某事件的对象，注册完订阅者之后便可以使用EventBus的 post方法来发布消息，每个消息仅被接收处理一次。 &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;无关事件(DeadEvent)：&lt;/strong&gt;如果EventBus发送的消息都不是订阅者关心的称之为Dead Event，这时我们可以通过log的方式来记录这种状态。&lt;/p&gt;
&lt;h3 id=&quot;3-总体设计&quot;&gt;&lt;a href=&quot;#3-总体设计&quot; class=&quot;headerlink&quot; title=&quot;3. 总体设计&quot;&gt;&lt;/a&gt;3. 总体设计&lt;/h3&gt;&lt;h4 id=&quot;3-1-类图设计&quot;&gt;&lt;a href=&quot;#3-1-类图设计&quot; class=&quot;headerlink&quot; title=&quot;3.1 类图设计&quot;&gt;&lt;/a&gt;3.1 类图设计&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;ps:忽略类名后的下划线     &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;3-1-1-EventBus简要类图&quot;&gt;&lt;a href=&quot;#3-1-1-EventBus简要类图&quot; class=&quot;headerlink&quot; title=&quot;3.1.1 EventBus简要类图&quot;&gt;&lt;/a&gt;3.1.1 EventBus简要类图&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;/images/pre-eventBus.png&quot; alt=&quot;pre-eventbus img&quot;&gt; &lt;/p&gt;
&lt;h5 id=&quot;3-1-2-EventBus详细类图&quot;&gt;&lt;a href=&quot;#3-1-2-EventBus详细类图&quot; class=&quot;headerlink&quot; title=&quot;3.1.2 EventBus详细类图&quot;&gt;&lt;/a&gt;3.1.2 EventBus详细类图&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;/images/EventBusDiagram.png&quot; alt=&quot;eventbus img&quot;&gt;  &lt;/p&gt;
&lt;h4 id=&quot;3-2-流程设计&quot;&gt;&lt;a href=&quot;#3-2-流程设计&quot; class=&quot;headerlink&quot; title=&quot;3.2 流程设计&quot;&gt;&lt;/a&gt;3.2 流程设计&lt;/h4&gt;&lt;h5 id=&quot;3-2-1-创建流程&quot;&gt;&lt;a href=&quot;#3-2-1-创建流程&quot; class=&quot;headerlink&quot; title=&quot;3.2.1 创建流程&quot;&gt;&lt;/a&gt;3.2.1 创建流程&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;/images/create.png&quot; alt=&quot;create img&quot;&gt;  &lt;/p&gt;
&lt;h5 id=&quot;3-2-2-register流程&quot;&gt;&lt;a href=&quot;#3-2-2-register流程&quot; class=&quot;headerlink&quot; title=&quot;3.2.2 register流程&quot;&gt;&lt;/a&gt;3.2.2 register流程&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;/images/register-progress.png&quot; alt=&quot;register-progress img&quot;&gt;  &lt;/p&gt;
&lt;h5 id=&quot;3-2-3-unregister流程&quot;&gt;&lt;a href=&quot;#3-2-3-unregister流程&quot; class=&quot;headerlink&quot; title=&quot;3.2.3 unregister流程&quot;&gt;&lt;/a&gt;3.2.3 unregister流程&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;/images/unregister.png&quot; alt=&quot;unregister img&quot;&gt;  &lt;/p&gt;
&lt;h5 id=&quot;3-2-4-post流程&quot;&gt;&lt;a href=&quot;#3-2-4-post流程&quot; class=&quot;headerlink&quot; title=&quot;3.2.4 post流程&quot;&gt;&lt;/a&gt;3.2.4 post流程&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;/images/post.png&quot; alt=&quot;post img&quot;&gt;  &lt;/p&gt;
&lt;h3 id=&quot;4-源码详细分析&quot;&gt;&lt;a href=&quot;#4-源码详细分析&quot; class=&quot;headerlink&quot; title=&quot;4. 源码详细分析&quot;&gt;&lt;/a&gt;4. 源码详细分析&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;线程安全注解：&lt;/strong&gt; &lt;code&gt;AllowConcurrentEvents&lt;/code&gt;      &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法订阅注解：&lt;/strong&gt; &lt;code&gt;Subscribe&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;标准消息总线：&lt;/strong&gt; &lt;code&gt;EventBus&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;异步消息总线：&lt;/strong&gt; &lt;code&gt;AsyncEventBus&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;订阅者注册表：&lt;/strong&gt; &lt;code&gt;SubscriberRegistry&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;异常上下文：&lt;/strong&gt; &lt;code&gt;SubscriberExceptionContext&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;订阅者：&lt;/strong&gt; &lt;code&gt;Subscriber&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;分发器：&lt;/strong&gt; &lt;code&gt;Dispatcher&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;异常Handler：&lt;/strong&gt; &lt;code&gt;SubscriberExceptionHandler&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DeadEvent：&lt;/strong&gt; &lt;code&gt;DeadEvent&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;5-总结&quot;&gt;&lt;a href=&quot;#5-总结&quot; class=&quot;headerlink&quot; title=&quot;5. 总结&quot;&gt;&lt;/a&gt;5. 总结&lt;/h3&gt;&lt;h4 id=&quot;5-1-并发编程，JDK并发包Executor&quot;&gt;&lt;a href=&quot;#5-1-并发编程，JDK并发包Executor&quot; class=&quot;headerlink&quot; title=&quot;5.1 并发编程，JDK并发包Executor&quot;&gt;&lt;/a&gt;5.1 并发编程，JDK并发包Executor&lt;/h4&gt;&lt;h4 id=&quot;5-2-guava断言checkNotNull&quot;&gt;&lt;a href=&quot;#5-2-guava断言checkNotNull&quot; class=&quot;headerlink&quot; title=&quot;5.2 guava断言checkNotNull&quot;&gt;&lt;/a&gt;5.2 guava断言checkNotNull&lt;/h4&gt;&lt;h4 id=&quot;5-3-静态导入&quot;&gt;&lt;a href=&quot;#5-3-静态导入&quot; class=&quot;headerlink&quot; title=&quot;5.3 静态导入&quot;&gt;&lt;/a&gt;5.3 静态导入&lt;/h4&gt;&lt;h4 id=&quot;5-4-注解方法cache&quot;&gt;&lt;a href=&quot;#5-4-注解方法cache&quot; class=&quot;headerlink&quot; title=&quot;5.4 注解方法cache&quot;&gt;&lt;/a&gt;5.4 注解方法cache&lt;/h4&gt;&lt;h4 id=&quot;5-5-缓存配置ImmutableList不可变list&quot;&gt;&lt;a href=&quot;#5-5-缓存配置ImmutableList不可变list&quot; class=&quot;headerlink&quot; title=&quot;5.5 缓存配置ImmutableList不可变list&quot;&gt;&lt;/a&gt;5.5 缓存配置ImmutableList不可变list&lt;/h4&gt;&lt;h4 id=&quot;5-6-获取类型TypeToken&quot;&gt;&lt;a href=&quot;#5-6-获取类型TypeToken&quot; class=&quot;headerlink&quot; title=&quot;5.6 获取类型TypeToken&quot;&gt;&lt;/a&gt;5.6 获取类型TypeToken&lt;/h4&gt;&lt;h4 id=&quot;5-7-ThreadLocal&quot;&gt;&lt;a href=&quot;#5-7-ThreadLocal&quot; class=&quot;headerlink&quot; title=&quot;5.7 ThreadLocal&quot;&gt;&lt;/a&gt;5.7 ThreadLocal&lt;/h4&gt;&lt;h4 id=&quot;5-8-test-update&quot;&gt;&lt;a href=&quot;#5-8-test-update&quot; class=&quot;headerlink&quot; title=&quot;5.8 test update&quot;&gt;&lt;/a&gt;5.8 test update&lt;/h4&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;Guava的EventBus源码学习，基于Guava的18.0版本&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;分析者：&lt;a href=&quot;https://github.com/qq291462491&quot;&gt;Allen&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;1-背景简介&quot;&gt;&lt;a href=&quot;#1-背景简介&quot; class=&quot;headerlink&quot; title=&quot;1. 背景简介&quot;&gt;&lt;/a&gt;1. 背景简介&lt;/h3&gt;&lt;p&gt;EventBus是google的一个Java工具包其中的一个工具类，类似的有多个版本其中包括移植到Android端的&lt;a href=&quot;https://github.com/greenrobot/EventBus&quot;&gt;greenrobot-EventBus&lt;/a&gt;&lt;br&gt;和改良的&lt;a href=&quot;https://github.com/square/otto&quot;&gt;square-otto&lt;/a&gt;，功能基本都是一样的。此处主要是对Guava版的EventBus分析，关于&lt;a href=&quot;https://github.com/google/guava&quot;&gt;guava代码地址&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="Guava" scheme="http://blog.bugk.info/categories/Guava/"/>
    
    
      <category term="Guava" scheme="http://blog.bugk.info/tags/Guava/"/>
    
      <category term="Java" scheme="http://blog.bugk.info/tags/Java/"/>
    
      <category term="学习" scheme="http://blog.bugk.info/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>你可能不知道的Shell命令</title>
    <link href="http://blog.bugk.info/2015/08/12/2015-08-12-ni-ke-neng-bu-zhi-dao-de-shellming-ling/"/>
    <id>http://blog.bugk.info/2015/08/12/2015-08-12-ni-ke-neng-bu-zhi-dao-de-shellming-ling/</id>
    <published>2015-08-12T07:02:31.000Z</published>
    <updated>2016-02-14T07:41:04.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;!$&quot;&gt;&lt;/a&gt;!$&lt;/h3&gt;&lt;p&gt;!$是一个特殊的环境变量，它代表了上一个命令的最后一个字符串。如：你可能会这样：&lt;br&gt;&lt;figure class=&quot;highlight xquery&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$mkdir&lt;/span&gt; mydir&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$mv&lt;/span&gt; mydir yourdir&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$cd&lt;/span&gt; yourdir&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以改成：&lt;br&gt;&lt;figure class=&quot;highlight xquery&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$mkdir&lt;/span&gt; mydir&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$mv&lt;/span&gt; !$ yourdir&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$cd&lt;/span&gt; !$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;sudo&quot;&gt;&lt;a href=&quot;#sudo&quot; class=&quot;headerlink&quot; title=&quot;sudo !!&quot;&gt;&lt;/a&gt;sudo !!&lt;/h3&gt;&lt;p&gt;以root的身份执行上一条命令 。&lt;br&gt;场景举例：比如Ubuntu里用apt-get安装软件包的时候是需要root身份的，我们经常会忘记在apt-get前加sudo。每次不得不加上sudo再重新键入这行命令，这时可以很方便的用sudo !!完事。&lt;br&gt;（陈皓注：在shell下，有时候你会输入很长的命令，你可以使用!xxx来重复最近的一次命令，比如，你以前输入过，vi /where/the/file/is, 下次你可以使用 !vi 重得上次最近一次的vi命令。）&lt;/p&gt;
&lt;h3 id=&quot;cd-–&quot;&gt;&lt;a href=&quot;#cd-–&quot; class=&quot;headerlink&quot; title=&quot;cd –&quot;&gt;&lt;/a&gt;cd –&lt;/h3&gt;&lt;p&gt;回到上一次的目录 。&lt;br&gt;场景举例：当前目录为/home/a，用cd ../b切换到/home/b。这时可以通过反复执行cd –命令在/home/a和/home/b之间来回方便的切换。&lt;br&gt;（注：cd ~ 是回到自己的Home目录，cd ~user，是进入某个用户的Home目录）&lt;/p&gt;
&lt;h3 id=&quot;old-new&quot;&gt;&lt;a href=&quot;#old-new&quot; class=&quot;headerlink&quot; title=&quot;^old^new&quot;&gt;&lt;/a&gt;^old^new&lt;/h3&gt;&lt;p&gt;替换前一条命令里的部分字符串。&lt;br&gt;场景：echo “wanderful”，其实是想输出echo “wonderful”。只需要^a^o就行了，对很长的命令的错误拼写有很大的帮助。（注：也可以使用 !!:gs/old/new）&lt;/p&gt;
&lt;h3 id=&quot;du-s-sort-n-tail&quot;&gt;&lt;a href=&quot;#du-s-sort-n-tail&quot; class=&quot;headerlink&quot; title=&quot;du -s * | sort -n | tail&quot;&gt;&lt;/a&gt;du -s * | sort -n | tail&lt;/h3&gt;&lt;p&gt;列出当前目录里最大的10个文件。&lt;/p&gt;
&lt;h3 id=&quot;w-sudo-tee&quot;&gt;&lt;a href=&quot;#w-sudo-tee&quot; class=&quot;headerlink&quot; title=&quot;:w !sudo tee %&quot;&gt;&lt;/a&gt;:w !sudo tee %&lt;/h3&gt;&lt;p&gt;在vi中保存一个只有root可以写的文件&lt;/p&gt;
&lt;h3 id=&quot;date-d-1234567890&quot;&gt;&lt;a href=&quot;#date-d-1234567890&quot; class=&quot;headerlink&quot; title=&quot;date -d@1234567890&quot;&gt;&lt;/a&gt;date -d@1234567890&lt;/h3&gt;&lt;p&gt;时间戳转时间&lt;br&gt;date -d20130203 +%s  得到某个时间的时间戳&lt;/p&gt;
&lt;h3 id=&quot;gt-file-txt&quot;&gt;&lt;a href=&quot;#gt-file-txt&quot; class=&quot;headerlink&quot; title=&quot;&amp;gt; file.txt&quot;&gt;&lt;/a&gt;&amp;gt; file.txt&lt;/h3&gt;&lt;p&gt;创建一个文件。&lt;/p&gt;
&lt;h3 id=&quot;mtr-meituan-com&quot;&gt;&lt;a href=&quot;#mtr-meituan-com&quot; class=&quot;headerlink&quot; title=&quot;mtr meituan.com&quot;&gt;&lt;/a&gt;mtr meituan.com&lt;/h3&gt;&lt;p&gt;mtr命令比traceroute要好&lt;/p&gt;
&lt;h3 id=&quot;在命令行前加空格，该命令不会进入history里。&quot;&gt;&lt;a href=&quot;#在命令行前加空格，该命令不会进入history里。&quot; class=&quot;headerlink&quot; title=&quot;在命令行前加空格，该命令不会进入history里。&quot;&gt;&lt;/a&gt;在命令行前加空格，该命令不会进入history里。&lt;/h3&gt;&lt;h3 id=&quot;echo-“ls-l”-at-midnight&quot;&gt;&lt;a href=&quot;#echo-“ls-l”-at-midnight&quot; class=&quot;headerlink&quot; title=&quot;echo “ls -l” | at midnight&quot;&gt;&lt;/a&gt;echo “ls -l” | at midnight&lt;/h3&gt;&lt;p&gt;在某个时间运行某个命令。&lt;/p&gt;
&lt;h3 id=&quot;ps-aux-sort-nk-4-tail&quot;&gt;&lt;a href=&quot;#ps-aux-sort-nk-4-tail&quot; class=&quot;headerlink&quot; title=&quot;ps aux | sort -nk +4 | tail&quot;&gt;&lt;/a&gt;ps aux | sort -nk +4 | tail&lt;/h3&gt;&lt;p&gt;列出头十个最耗内存的进程&lt;/p&gt;
&lt;h3 id=&quot;man-ascii&quot;&gt;&lt;a href=&quot;#man-ascii&quot; class=&quot;headerlink&quot; title=&quot;man ascii&quot;&gt;&lt;/a&gt;man ascii&lt;/h3&gt;&lt;p&gt;ascii 对照表&lt;/p&gt;
&lt;h3 id=&quot;tail-f-path-to-file-log-sed-‘-Finished-SUCCESS-q’&quot;&gt;&lt;a href=&quot;#tail-f-path-to-file-log-sed-‘-Finished-SUCCESS-q’&quot; class=&quot;headerlink&quot; title=&quot;tail -f /path/to/file.log | sed ‘/^Finished: SUCCESS$/ q’&quot;&gt;&lt;/a&gt;tail -f /path/to/file.log | sed ‘/^Finished: SUCCESS$/ q’&lt;/h3&gt;&lt;p&gt;当file.log里出现Finished: SUCCESS时候就退出tail，这个命令用于实时监控并过滤log是否出现了某条记录。&lt;/p&gt;
&lt;h3 id=&quot;ssh-user-server-bash-lt-path-to-local-script-sh&quot;&gt;&lt;a href=&quot;#ssh-user-server-bash-lt-path-to-local-script-sh&quot; class=&quot;headerlink&quot; title=&quot;ssh user@server bash &amp;lt; /path/to/local/script.sh&quot;&gt;&lt;/a&gt;ssh user@server bash &amp;lt; /path/to/local/script.sh&lt;/h3&gt;&lt;p&gt;在远程机器上运行一段脚本。这条命令最大的好处就是不用把脚本拷到远程机器上。&lt;/p&gt;
&lt;h3 id=&quot;ssh-user-host-cat-path-to-remotefile-diff-path-to-localfile-–&quot;&gt;&lt;a href=&quot;#ssh-user-host-cat-path-to-remotefile-diff-path-to-localfile-–&quot; class=&quot;headerlink&quot; title=&quot;ssh user@host cat /path/to/remotefile | diff /path/to/localfile –&quot;&gt;&lt;/a&gt;ssh user@host cat /path/to/remotefile | diff /path/to/localfile –&lt;/h3&gt;&lt;p&gt;比较一个远程文件和一个本地文件&lt;/p&gt;
&lt;h3 id=&quot;net-rpc-shutdown-I-ipAddressOfWindowsPC-U-username-password&quot;&gt;&lt;a href=&quot;#net-rpc-shutdown-I-ipAddressOfWindowsPC-U-username-password&quot; class=&quot;headerlink&quot; title=&quot;net rpc shutdown -I ipAddressOfWindowsPC -U username%password&quot;&gt;&lt;/a&gt;net rpc shutdown -I ipAddressOfWindowsPC -U username%password&lt;/h3&gt;&lt;p&gt;远程关闭一台Windows的机器&lt;/p&gt;
&lt;h3 id=&quot;screen-d-m-S-some-name-ping-my-router&quot;&gt;&lt;a href=&quot;#screen-d-m-S-some-name-ping-my-router&quot; class=&quot;headerlink&quot; title=&quot;screen -d -m -S some_name ping my_router&quot;&gt;&lt;/a&gt;screen -d -m -S some_name ping my_router&lt;/h3&gt;&lt;p&gt;后台运行一段不终止的程序，并可以随时查看它的状态。-d -m参数启动“分离”模式，-S指定了一个session的标识。可以通过-R命令来重新“挂载”一个标识的session。更多细节请参考screen用法 man screen。&lt;/p&gt;
&lt;h3 id=&quot;wget-–random-wait-r-p-e-robots-off-U-mozilla-http-www-example-com&quot;&gt;&lt;a href=&quot;#wget-–random-wait-r-p-e-robots-off-U-mozilla-http-www-example-com&quot; class=&quot;headerlink&quot; title=&quot;wget –random-wait -r -p -e robots=off -U mozilla http://www.example.com&quot;&gt;&lt;/a&gt;wget –random-wait -r -p -e robots=off -U mozilla &lt;a href=&quot;http://www.example.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.com&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;下载整个www.example.com网站。（注：别太过分，大部分网站都有防爬功能了：））&lt;/p&gt;
&lt;h3 id=&quot;curl-ifconfig-me&quot;&gt;&lt;a href=&quot;#curl-ifconfig-me&quot; class=&quot;headerlink&quot; title=&quot;curl ifconfig.me&quot;&gt;&lt;/a&gt;curl ifconfig.me&lt;/h3&gt;&lt;p&gt;当你的机器在内网的时候，可以通过这个命令查看外网的IP。&lt;/p&gt;
&lt;h3 id=&quot;convert-input-png-gravity-NorthWest-background-transparent-extent-720×200-output-png&quot;&gt;&lt;a href=&quot;#convert-input-png-gravity-NorthWest-background-transparent-extent-720×200-output-png&quot; class=&quot;headerlink&quot; title=&quot;convert input.png -gravity NorthWest -background transparent -extent 720×200  output.png&quot;&gt;&lt;/a&gt;convert input.png -gravity NorthWest -background transparent -extent 720×200  output.png&lt;/h3&gt;&lt;p&gt;改一下图片的大小尺寸&lt;/p&gt;
&lt;h3 id=&quot;lsof-–i&quot;&gt;&lt;a href=&quot;#lsof-–i&quot; class=&quot;headerlink&quot; title=&quot;lsof –i&quot;&gt;&lt;/a&gt;lsof –i&lt;/h3&gt;&lt;p&gt;实时查看本机网络服务的活动状态。&lt;/p&gt;
&lt;h3 id=&quot;vim-scp-username-host-path-to-somefile&quot;&gt;&lt;a href=&quot;#vim-scp-username-host-path-to-somefile&quot; class=&quot;headerlink&quot; title=&quot;vim scp://username@host//path/to/somefile&quot;&gt;&lt;/a&gt;vim scp://username@host//path/to/somefile&lt;/h3&gt;&lt;p&gt;vim一个远程文件&lt;/p&gt;
&lt;p&gt;###python -m SimpleHTTPServer&lt;br&gt;一句话实现一个HTTP服务，把当前目录设为HTTP服务目录，可以通过&lt;a href=&quot;http://localhost:8000访问&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:8000访问&lt;/a&gt; 这也许是这个星球上最简单的HTTP服务器的实现了。&lt;/p&gt;
&lt;h3 id=&quot;history-awk-‘-CMD-2-count-END-for-a-in-CMD-print-CMD-a-“-“-CMD-a-count-100-“-“-a-’-grep-v-“-“-column-c3-s-“-“-t-sort-nr-nl-head-n10&quot;&gt;&lt;a href=&quot;#history-awk-‘-CMD-2-count-END-for-a-in-CMD-print-CMD-a-“-“-CMD-a-count-100-“-“-a-’-grep-v-“-“-column-c3-s-“-“-t-sort-nr-nl-head-n10&quot; class=&quot;headerlink&quot; title=&quot;history | awk ‘{CMD[$2]++;count++;} END { for (a in CMD )print CMD[a] “ “ CMD[a]/count*100 “% “ a }’ | grep -v “./“ | column -c3 -s “ “ -t | sort -nr | nl | head -n10&quot;&gt;&lt;/a&gt;history | awk ‘{CMD[$2]++;count++;} END { for (a in CMD )print CMD[a] “ “ CMD[a]/count*100 “% “ a }’ | grep -v “./“ | column -c3 -s “ “ -t | sort -nr | nl | head -n10&lt;/h3&gt;&lt;p&gt;(陈皓注：有点复杂了，history|awk ‘{print $2}’|awk ‘BEGIN {FS=”|”} {print $1}’|sort|uniq -c|sort -rn|head -10)&lt;br&gt;这行脚本能输出你最常用的十条命令，由此甚至可以洞察你是一个什么类型的程序员&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;!$&quot;&gt;&lt;/a&gt;!$&lt;/h3&gt;&lt;p&gt;!$是一个特殊的环境变量，它代表了上一个命令的最后一个字符串。如：你可能会这样：&lt;br&gt;&lt;figure class=&quot;highlight xquery&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$mkdir&lt;/span&gt; mydir&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$mv&lt;/span&gt; mydir yourdir&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$cd&lt;/span&gt; yourdir&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以改成：&lt;br&gt;&lt;figure class=&quot;highlight xquery&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$mkdir&lt;/span&gt; mydir&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$mv&lt;/span&gt; !$ yourdir&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$cd&lt;/span&gt; !$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="http://blog.bugk.info/categories/linux/"/>
    
    
      <category term="linux" scheme="http://blog.bugk.info/tags/linux/"/>
    
      <category term="shell" scheme="http://blog.bugk.info/tags/shell/"/>
    
      <category term="命令" scheme="http://blog.bugk.info/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
</feed>
